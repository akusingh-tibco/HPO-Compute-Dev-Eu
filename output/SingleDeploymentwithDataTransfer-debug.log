suite.setup.deployIntercomClient: Starting task execution
suite.setup.deployIntercomClient: Replacing task placeholders (if any)
suite.setup.deployIntercomClient: Generating templates...
suite.setup.deployIntercomClient: Generating file '/Users/akusingh/Github_Desktop/HybridProxyOperator-Automation/generated/client-intercom.yaml' from template '/Users/akusingh/Github_Desktop/HybridProxyOperator-Automation/resources/services/client-intercom.yaml'
suite.setup.deployIntercomClient: Start iteration #0
suite.setup.deployIntercomClient: Executing script: 'kubectl apply -f ./generated/client-intercom.yaml'
suite.setup.deployIntercomClient: [STDOUT] tibcodeployment.cloud.tibco.com/intercom-client unchanged
suite.setup.deployIntercomClient: [STDOUT] service/intercom-client unchanged
suite.setup.deployIntercomClient: [STDOUT] tibcointercomrule.cloud.tibco.com/intercom-client unchanged
suite.setup.deployIntercomClient: Captured variable: suite.setup.deployIntercomClient.status=0
suite.setup.deployIntercomClient: Validating condition 'status equal 0'
suite.setup.deployIntercomClient: Expect condition 'status equal 0' passed
suite.setup.deployIntercomClient: [OK] Execution results match all expected results
suite.setup.deployIntercomClient: Completed iteration #0 with status: PASS
===== suite.setup.deployIntercomClient: PASS in 28.707488557s (1 iterations)
suite.setup.getIntercomPod: Starting task execution
suite.setup.getIntercomPod: Replacing task placeholders (if any)
suite.setup.getIntercomPod: Start iteration #0
suite.setup.getIntercomPod: Executing script: 'kubectl get pods -l app.kubernetes.io/name=intercom-client -n aws-compute-tibco-tenantx -ojson'
suite.setup.getIntercomPod: [STDOUT] {
suite.setup.getIntercomPod: [STDOUT]     "apiVersion": "v1",
suite.setup.getIntercomPod: [STDOUT]     "items": [
suite.setup.getIntercomPod: [STDOUT]         {
suite.setup.getIntercomPod: [STDOUT]             "apiVersion": "v1",
suite.setup.getIntercomPod: [STDOUT]             "kind": "Pod",
suite.setup.getIntercomPod: [STDOUT]             "metadata": {
suite.setup.getIntercomPod: [STDOUT]                 "annotations": {
suite.setup.getIntercomPod: [STDOUT]                     "kubernetes.io/psp": "eks.privileged"
suite.setup.getIntercomPod: [STDOUT]                 },
suite.setup.getIntercomPod: [STDOUT]                 "creationTimestamp": "2021-06-11T07:02:58Z",
suite.setup.getIntercomPod: [STDOUT]                 "generateName": "intercom-client-6fd98bb7fd-",
suite.setup.getIntercomPod: [STDOUT]                 "labels": {
suite.setup.getIntercomPod: [STDOUT]                     "app.cloud.tibco.com/owner": "qa_tibco.com",
suite.setup.getIntercomPod: [STDOUT]                     "app.kubernetes.io/component": "test-infrastructure",
suite.setup.getIntercomPod: [STDOUT]                     "app.kubernetes.io/name": "intercom-client",
suite.setup.getIntercomPod: [STDOUT]                     "app.kubernetes.io/part-of": "qa-testing",
suite.setup.getIntercomPod: [STDOUT]                     "pod-template-hash": "6fd98bb7fd"
suite.setup.getIntercomPod: [STDOUT]                 },
suite.setup.getIntercomPod: [STDOUT]                 "managedFields": [
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "apiVersion": "v1",
suite.setup.getIntercomPod: [STDOUT]                         "fieldsType": "FieldsV1",
suite.setup.getIntercomPod: [STDOUT]                         "fieldsV1": {
suite.setup.getIntercomPod: [STDOUT]                             "f:metadata": {
suite.setup.getIntercomPod: [STDOUT]                                 "f:generateName": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:labels": {
suite.setup.getIntercomPod: [STDOUT]                                     ".": {},
suite.setup.getIntercomPod: [STDOUT]                                     "f:app.cloud.tibco.com/owner": {},
suite.setup.getIntercomPod: [STDOUT]                                     "f:app.kubernetes.io/component": {},
suite.setup.getIntercomPod: [STDOUT]                                     "f:app.kubernetes.io/name": {},
suite.setup.getIntercomPod: [STDOUT]                                     "f:app.kubernetes.io/part-of": {},
suite.setup.getIntercomPod: [STDOUT]                                     "f:pod-template-hash": {}
suite.setup.getIntercomPod: [STDOUT]                                 },
suite.setup.getIntercomPod: [STDOUT]                                 "f:ownerReferences": {
suite.setup.getIntercomPod: [STDOUT]                                     ".": {},
suite.setup.getIntercomPod: [STDOUT]                                     "k:{\"uid\":\"aa869121-348d-4073-93a9-b017850f9faf\"}": {
suite.setup.getIntercomPod: [STDOUT]                                         ".": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:apiVersion": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:blockOwnerDeletion": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:controller": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:kind": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:name": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:uid": {}
suite.setup.getIntercomPod: [STDOUT]                                     }
suite.setup.getIntercomPod: [STDOUT]                                 }
suite.setup.getIntercomPod: [STDOUT]                             },
suite.setup.getIntercomPod: [STDOUT]                             "f:spec": {
suite.setup.getIntercomPod: [STDOUT]                                 "f:containers": {
suite.setup.getIntercomPod: [STDOUT]                                     "k:{\"name\":\"main\"}": {
suite.setup.getIntercomPod: [STDOUT]                                         ".": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:env": {
suite.setup.getIntercomPod: [STDOUT]                                             ".": {},
suite.setup.getIntercomPod: [STDOUT]                                             "k:{\"name\":\"DELAY_START\"}": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:name": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:value": {}
suite.setup.getIntercomPod: [STDOUT]                                             },
suite.setup.getIntercomPod: [STDOUT]                                             "k:{\"name\":\"DELAY_STOP\"}": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:name": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:value": {}
suite.setup.getIntercomPod: [STDOUT]                                             },
suite.setup.getIntercomPod: [STDOUT]                                             "k:{\"name\":\"NODE_IP\"}": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:name": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:valueFrom": {
suite.setup.getIntercomPod: [STDOUT]                                                     ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                     "f:fieldRef": {
suite.setup.getIntercomPod: [STDOUT]                                                         ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                         "f:apiVersion": {},
suite.setup.getIntercomPod: [STDOUT]                                                         "f:fieldPath": {}
suite.setup.getIntercomPod: [STDOUT]                                                     }
suite.setup.getIntercomPod: [STDOUT]                                                 }
suite.setup.getIntercomPod: [STDOUT]                                             },
suite.setup.getIntercomPod: [STDOUT]                                             "k:{\"name\":\"NODE_NAME\"}": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:name": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:valueFrom": {
suite.setup.getIntercomPod: [STDOUT]                                                     ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                     "f:fieldRef": {
suite.setup.getIntercomPod: [STDOUT]                                                         ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                         "f:apiVersion": {},
suite.setup.getIntercomPod: [STDOUT]                                                         "f:fieldPath": {}
suite.setup.getIntercomPod: [STDOUT]                                                     }
suite.setup.getIntercomPod: [STDOUT]                                                 }
suite.setup.getIntercomPod: [STDOUT]                                             },
suite.setup.getIntercomPod: [STDOUT]                                             "k:{\"name\":\"POD_IP\"}": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:name": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:valueFrom": {
suite.setup.getIntercomPod: [STDOUT]                                                     ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                     "f:fieldRef": {
suite.setup.getIntercomPod: [STDOUT]                                                         ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                         "f:apiVersion": {},
suite.setup.getIntercomPod: [STDOUT]                                                         "f:fieldPath": {}
suite.setup.getIntercomPod: [STDOUT]                                                     }
suite.setup.getIntercomPod: [STDOUT]                                                 }
suite.setup.getIntercomPod: [STDOUT]                                             },
suite.setup.getIntercomPod: [STDOUT]                                             "k:{\"name\":\"REQUEST_READ_TIMEOUT\"}": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:name": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:value": {}
suite.setup.getIntercomPod: [STDOUT]                                             },
suite.setup.getIntercomPod: [STDOUT]                                             "k:{\"name\":\"RESPONSE_WRITE_TIMEOUT\"}": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:name": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:value": {}
suite.setup.getIntercomPod: [STDOUT]                                             }
suite.setup.getIntercomPod: [STDOUT]                                         },
suite.setup.getIntercomPod: [STDOUT]                                         "f:image": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:imagePullPolicy": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:livenessProbe": {
suite.setup.getIntercomPod: [STDOUT]                                             ".": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:failureThreshold": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:httpGet": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:path": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:port": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:scheme": {}
suite.setup.getIntercomPod: [STDOUT]                                             },
suite.setup.getIntercomPod: [STDOUT]                                             "f:initialDelaySeconds": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:periodSeconds": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:successThreshold": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:timeoutSeconds": {}
suite.setup.getIntercomPod: [STDOUT]                                         },
suite.setup.getIntercomPod: [STDOUT]                                         "f:name": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:ports": {
suite.setup.getIntercomPod: [STDOUT]                                             ".": {},
suite.setup.getIntercomPod: [STDOUT]                                             "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:containerPort": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:protocol": {}
suite.setup.getIntercomPod: [STDOUT]                                             }
suite.setup.getIntercomPod: [STDOUT]                                         },
suite.setup.getIntercomPod: [STDOUT]                                         "f:readinessProbe": {
suite.setup.getIntercomPod: [STDOUT]                                             ".": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:failureThreshold": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:httpGet": {
suite.setup.getIntercomPod: [STDOUT]                                                 ".": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:path": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:port": {},
suite.setup.getIntercomPod: [STDOUT]                                                 "f:scheme": {}
suite.setup.getIntercomPod: [STDOUT]                                             },
suite.setup.getIntercomPod: [STDOUT]                                             "f:initialDelaySeconds": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:periodSeconds": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:successThreshold": {},
suite.setup.getIntercomPod: [STDOUT]                                             "f:timeoutSeconds": {}
suite.setup.getIntercomPod: [STDOUT]                                         },
suite.setup.getIntercomPod: [STDOUT]                                         "f:resources": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:terminationMessagePath": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:terminationMessagePolicy": {}
suite.setup.getIntercomPod: [STDOUT]                                     }
suite.setup.getIntercomPod: [STDOUT]                                 },
suite.setup.getIntercomPod: [STDOUT]                                 "f:dnsPolicy": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:enableServiceLinks": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:nodeSelector": {
suite.setup.getIntercomPod: [STDOUT]                                     ".": {},
suite.setup.getIntercomPod: [STDOUT]                                     "f:kubernetes.io/os": {}
suite.setup.getIntercomPod: [STDOUT]                                 },
suite.setup.getIntercomPod: [STDOUT]                                 "f:restartPolicy": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:schedulerName": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:securityContext": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:terminationGracePeriodSeconds": {}
suite.setup.getIntercomPod: [STDOUT]                             }
suite.setup.getIntercomPod: [STDOUT]                         },
suite.setup.getIntercomPod: [STDOUT]                         "manager": "kube-controller-manager",
suite.setup.getIntercomPod: [STDOUT]                         "operation": "Update",
suite.setup.getIntercomPod: [STDOUT]                         "time": "2021-06-11T07:02:58Z"
suite.setup.getIntercomPod: [STDOUT]                     },
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "apiVersion": "v1",
suite.setup.getIntercomPod: [STDOUT]                         "fieldsType": "FieldsV1",
suite.setup.getIntercomPod: [STDOUT]                         "fieldsV1": {
suite.setup.getIntercomPod: [STDOUT]                             "f:status": {
suite.setup.getIntercomPod: [STDOUT]                                 "f:conditions": {
suite.setup.getIntercomPod: [STDOUT]                                     "k:{\"type\":\"ContainersReady\"}": {
suite.setup.getIntercomPod: [STDOUT]                                         ".": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:lastProbeTime": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:lastTransitionTime": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:status": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:type": {}
suite.setup.getIntercomPod: [STDOUT]                                     },
suite.setup.getIntercomPod: [STDOUT]                                     "k:{\"type\":\"Initialized\"}": {
suite.setup.getIntercomPod: [STDOUT]                                         ".": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:lastProbeTime": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:lastTransitionTime": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:status": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:type": {}
suite.setup.getIntercomPod: [STDOUT]                                     },
suite.setup.getIntercomPod: [STDOUT]                                     "k:{\"type\":\"Ready\"}": {
suite.setup.getIntercomPod: [STDOUT]                                         ".": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:lastProbeTime": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:lastTransitionTime": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:status": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:type": {}
suite.setup.getIntercomPod: [STDOUT]                                     }
suite.setup.getIntercomPod: [STDOUT]                                 },
suite.setup.getIntercomPod: [STDOUT]                                 "f:containerStatuses": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:hostIP": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:phase": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:podIP": {},
suite.setup.getIntercomPod: [STDOUT]                                 "f:podIPs": {
suite.setup.getIntercomPod: [STDOUT]                                     ".": {},
suite.setup.getIntercomPod: [STDOUT]                                     "k:{\"ip\":\"10.50.130.170\"}": {
suite.setup.getIntercomPod: [STDOUT]                                         ".": {},
suite.setup.getIntercomPod: [STDOUT]                                         "f:ip": {}
suite.setup.getIntercomPod: [STDOUT]                                     }
suite.setup.getIntercomPod: [STDOUT]                                 },
suite.setup.getIntercomPod: [STDOUT]                                 "f:startTime": {}
suite.setup.getIntercomPod: [STDOUT]                             }
suite.setup.getIntercomPod: [STDOUT]                         },
suite.setup.getIntercomPod: [STDOUT]                         "manager": "kubelet",
suite.setup.getIntercomPod: [STDOUT]                         "operation": "Update",
suite.setup.getIntercomPod: [STDOUT]                         "time": "2021-06-11T07:03:09Z"
suite.setup.getIntercomPod: [STDOUT]                     }
suite.setup.getIntercomPod: [STDOUT]                 ],
suite.setup.getIntercomPod: [STDOUT]                 "name": "intercom-client-6fd98bb7fd-k86z2",
suite.setup.getIntercomPod: [STDOUT]                 "namespace": "aws-compute-tibco-tenantx",
suite.setup.getIntercomPod: [STDOUT]                 "ownerReferences": [
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "apiVersion": "apps/v1",
suite.setup.getIntercomPod: [STDOUT]                         "blockOwnerDeletion": true,
suite.setup.getIntercomPod: [STDOUT]                         "controller": true,
suite.setup.getIntercomPod: [STDOUT]                         "kind": "ReplicaSet",
suite.setup.getIntercomPod: [STDOUT]                         "name": "intercom-client-6fd98bb7fd",
suite.setup.getIntercomPod: [STDOUT]                         "uid": "aa869121-348d-4073-93a9-b017850f9faf"
suite.setup.getIntercomPod: [STDOUT]                     }
suite.setup.getIntercomPod: [STDOUT]                 ],
suite.setup.getIntercomPod: [STDOUT]                 "resourceVersion": "27823",
suite.setup.getIntercomPod: [STDOUT]                 "uid": "830edbc4-78f5-4f1d-b379-abffbda80a9e"
suite.setup.getIntercomPod: [STDOUT]             },
suite.setup.getIntercomPod: [STDOUT]             "spec": {
suite.setup.getIntercomPod: [STDOUT]                 "containers": [
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "env": [
suite.setup.getIntercomPod: [STDOUT]                             {
suite.setup.getIntercomPod: [STDOUT]                                 "name": "DELAY_START",
suite.setup.getIntercomPod: [STDOUT]                                 "value": "0s"
suite.setup.getIntercomPod: [STDOUT]                             },
suite.setup.getIntercomPod: [STDOUT]                             {
suite.setup.getIntercomPod: [STDOUT]                                 "name": "DELAY_STOP",
suite.setup.getIntercomPod: [STDOUT]                                 "value": "0s"
suite.setup.getIntercomPod: [STDOUT]                             },
suite.setup.getIntercomPod: [STDOUT]                             {
suite.setup.getIntercomPod: [STDOUT]                                 "name": "REQUEST_READ_TIMEOUT",
suite.setup.getIntercomPod: [STDOUT]                                 "value": "0s"
suite.setup.getIntercomPod: [STDOUT]                             },
suite.setup.getIntercomPod: [STDOUT]                             {
suite.setup.getIntercomPod: [STDOUT]                                 "name": "RESPONSE_WRITE_TIMEOUT",
suite.setup.getIntercomPod: [STDOUT]                                 "value": "0s"
suite.setup.getIntercomPod: [STDOUT]                             },
suite.setup.getIntercomPod: [STDOUT]                             {
suite.setup.getIntercomPod: [STDOUT]                                 "name": "NODE_NAME",
suite.setup.getIntercomPod: [STDOUT]                                 "valueFrom": {
suite.setup.getIntercomPod: [STDOUT]                                     "fieldRef": {
suite.setup.getIntercomPod: [STDOUT]                                         "apiVersion": "v1",
suite.setup.getIntercomPod: [STDOUT]                                         "fieldPath": "spec.nodeName"
suite.setup.getIntercomPod: [STDOUT]                                     }
suite.setup.getIntercomPod: [STDOUT]                                 }
suite.setup.getIntercomPod: [STDOUT]                             },
suite.setup.getIntercomPod: [STDOUT]                             {
suite.setup.getIntercomPod: [STDOUT]                                 "name": "NODE_IP",
suite.setup.getIntercomPod: [STDOUT]                                 "valueFrom": {
suite.setup.getIntercomPod: [STDOUT]                                     "fieldRef": {
suite.setup.getIntercomPod: [STDOUT]                                         "apiVersion": "v1",
suite.setup.getIntercomPod: [STDOUT]                                         "fieldPath": "status.hostIP"
suite.setup.getIntercomPod: [STDOUT]                                     }
suite.setup.getIntercomPod: [STDOUT]                                 }
suite.setup.getIntercomPod: [STDOUT]                             },
suite.setup.getIntercomPod: [STDOUT]                             {
suite.setup.getIntercomPod: [STDOUT]                                 "name": "POD_IP",
suite.setup.getIntercomPod: [STDOUT]                                 "valueFrom": {
suite.setup.getIntercomPod: [STDOUT]                                     "fieldRef": {
suite.setup.getIntercomPod: [STDOUT]                                         "apiVersion": "v1",
suite.setup.getIntercomPod: [STDOUT]                                         "fieldPath": "status.podIP"
suite.setup.getIntercomPod: [STDOUT]                                     }
suite.setup.getIntercomPod: [STDOUT]                                 }
suite.setup.getIntercomPod: [STDOUT]                             }
suite.setup.getIntercomPod: [STDOUT]                         ],
suite.setup.getIntercomPod: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/test-service:latest",
suite.setup.getIntercomPod: [STDOUT]                         "imagePullPolicy": "Always",
suite.setup.getIntercomPod: [STDOUT]                         "livenessProbe": {
suite.setup.getIntercomPod: [STDOUT]                             "failureThreshold": 1,
suite.setup.getIntercomPod: [STDOUT]                             "httpGet": {
suite.setup.getIntercomPod: [STDOUT]                                 "path": "/echo/health",
suite.setup.getIntercomPod: [STDOUT]                                 "port": 8080,
suite.setup.getIntercomPod: [STDOUT]                                 "scheme": "HTTP"
suite.setup.getIntercomPod: [STDOUT]                             },
suite.setup.getIntercomPod: [STDOUT]                             "initialDelaySeconds": 1,
suite.setup.getIntercomPod: [STDOUT]                             "periodSeconds": 5,
suite.setup.getIntercomPod: [STDOUT]                             "successThreshold": 1,
suite.setup.getIntercomPod: [STDOUT]                             "timeoutSeconds": 3
suite.setup.getIntercomPod: [STDOUT]                         },
suite.setup.getIntercomPod: [STDOUT]                         "name": "main",
suite.setup.getIntercomPod: [STDOUT]                         "ports": [
suite.setup.getIntercomPod: [STDOUT]                             {
suite.setup.getIntercomPod: [STDOUT]                                 "containerPort": 8080,
suite.setup.getIntercomPod: [STDOUT]                                 "protocol": "TCP"
suite.setup.getIntercomPod: [STDOUT]                             }
suite.setup.getIntercomPod: [STDOUT]                         ],
suite.setup.getIntercomPod: [STDOUT]                         "readinessProbe": {
suite.setup.getIntercomPod: [STDOUT]                             "failureThreshold": 1,
suite.setup.getIntercomPod: [STDOUT]                             "httpGet": {
suite.setup.getIntercomPod: [STDOUT]                                 "path": "/echo/health",
suite.setup.getIntercomPod: [STDOUT]                                 "port": 8080,
suite.setup.getIntercomPod: [STDOUT]                                 "scheme": "HTTP"
suite.setup.getIntercomPod: [STDOUT]                             },
suite.setup.getIntercomPod: [STDOUT]                             "initialDelaySeconds": 1,
suite.setup.getIntercomPod: [STDOUT]                             "periodSeconds": 5,
suite.setup.getIntercomPod: [STDOUT]                             "successThreshold": 1,
suite.setup.getIntercomPod: [STDOUT]                             "timeoutSeconds": 3
suite.setup.getIntercomPod: [STDOUT]                         },
suite.setup.getIntercomPod: [STDOUT]                         "resources": {},
suite.setup.getIntercomPod: [STDOUT]                         "terminationMessagePath": "/dev/termination-log",
suite.setup.getIntercomPod: [STDOUT]                         "terminationMessagePolicy": "File",
suite.setup.getIntercomPod: [STDOUT]                         "volumeMounts": [
suite.setup.getIntercomPod: [STDOUT]                             {
suite.setup.getIntercomPod: [STDOUT]                                 "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
suite.setup.getIntercomPod: [STDOUT]                                 "name": "default-token-bjfvs",
suite.setup.getIntercomPod: [STDOUT]                                 "readOnly": true
suite.setup.getIntercomPod: [STDOUT]                             }
suite.setup.getIntercomPod: [STDOUT]                         ]
suite.setup.getIntercomPod: [STDOUT]                     }
suite.setup.getIntercomPod: [STDOUT]                 ],
suite.setup.getIntercomPod: [STDOUT]                 "dnsPolicy": "ClusterFirst",
suite.setup.getIntercomPod: [STDOUT]                 "enableServiceLinks": true,
suite.setup.getIntercomPod: [STDOUT]                 "nodeName": "ip-10-50-178-97.eu-west-1.compute.internal",
suite.setup.getIntercomPod: [STDOUT]                 "nodeSelector": {
suite.setup.getIntercomPod: [STDOUT]                     "kubernetes.io/os": "linux"
suite.setup.getIntercomPod: [STDOUT]                 },
suite.setup.getIntercomPod: [STDOUT]                 "preemptionPolicy": "PreemptLowerPriority",
suite.setup.getIntercomPod: [STDOUT]                 "priority": 0,
suite.setup.getIntercomPod: [STDOUT]                 "restartPolicy": "Always",
suite.setup.getIntercomPod: [STDOUT]                 "schedulerName": "default-scheduler",
suite.setup.getIntercomPod: [STDOUT]                 "securityContext": {},
suite.setup.getIntercomPod: [STDOUT]                 "serviceAccount": "default",
suite.setup.getIntercomPod: [STDOUT]                 "serviceAccountName": "default",
suite.setup.getIntercomPod: [STDOUT]                 "terminationGracePeriodSeconds": 10,
suite.setup.getIntercomPod: [STDOUT]                 "tolerations": [
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "effect": "NoExecute",
suite.setup.getIntercomPod: [STDOUT]                         "key": "node.kubernetes.io/not-ready",
suite.setup.getIntercomPod: [STDOUT]                         "operator": "Exists",
suite.setup.getIntercomPod: [STDOUT]                         "tolerationSeconds": 300
suite.setup.getIntercomPod: [STDOUT]                     },
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "effect": "NoExecute",
suite.setup.getIntercomPod: [STDOUT]                         "key": "node.kubernetes.io/unreachable",
suite.setup.getIntercomPod: [STDOUT]                         "operator": "Exists",
suite.setup.getIntercomPod: [STDOUT]                         "tolerationSeconds": 300
suite.setup.getIntercomPod: [STDOUT]                     }
suite.setup.getIntercomPod: [STDOUT]                 ],
suite.setup.getIntercomPod: [STDOUT]                 "volumes": [
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "name": "default-token-bjfvs",
suite.setup.getIntercomPod: [STDOUT]                         "secret": {
suite.setup.getIntercomPod: [STDOUT]                             "defaultMode": 420,
suite.setup.getIntercomPod: [STDOUT]                             "secretName": "default-token-bjfvs"
suite.setup.getIntercomPod: [STDOUT]                         }
suite.setup.getIntercomPod: [STDOUT]                     }
suite.setup.getIntercomPod: [STDOUT]                 ]
suite.setup.getIntercomPod: [STDOUT]             },
suite.setup.getIntercomPod: [STDOUT]             "status": {
suite.setup.getIntercomPod: [STDOUT]                 "conditions": [
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "lastProbeTime": null,
suite.setup.getIntercomPod: [STDOUT]                         "lastTransitionTime": "2021-06-11T07:02:58Z",
suite.setup.getIntercomPod: [STDOUT]                         "status": "True",
suite.setup.getIntercomPod: [STDOUT]                         "type": "Initialized"
suite.setup.getIntercomPod: [STDOUT]                     },
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "lastProbeTime": null,
suite.setup.getIntercomPod: [STDOUT]                         "lastTransitionTime": "2021-06-11T07:03:09Z",
suite.setup.getIntercomPod: [STDOUT]                         "status": "True",
suite.setup.getIntercomPod: [STDOUT]                         "type": "Ready"
suite.setup.getIntercomPod: [STDOUT]                     },
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "lastProbeTime": null,
suite.setup.getIntercomPod: [STDOUT]                         "lastTransitionTime": "2021-06-11T07:03:09Z",
suite.setup.getIntercomPod: [STDOUT]                         "status": "True",
suite.setup.getIntercomPod: [STDOUT]                         "type": "ContainersReady"
suite.setup.getIntercomPod: [STDOUT]                     },
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "lastProbeTime": null,
suite.setup.getIntercomPod: [STDOUT]                         "lastTransitionTime": "2021-06-11T07:02:58Z",
suite.setup.getIntercomPod: [STDOUT]                         "status": "True",
suite.setup.getIntercomPod: [STDOUT]                         "type": "PodScheduled"
suite.setup.getIntercomPod: [STDOUT]                     }
suite.setup.getIntercomPod: [STDOUT]                 ],
suite.setup.getIntercomPod: [STDOUT]                 "containerStatuses": [
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "containerID": "docker://d4675e2ac04dbdaea53f319c5c3adf8ed8d34acb69b6295c1ef360ce0dd0a8e0",
suite.setup.getIntercomPod: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/test-service:latest",
suite.setup.getIntercomPod: [STDOUT]                         "imageID": "docker-pullable://664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/test-service@sha256:c6a0cf4748bb26f6b89c5dd192de22c202d4e08da6c39815258482e375f0e190",
suite.setup.getIntercomPod: [STDOUT]                         "lastState": {},
suite.setup.getIntercomPod: [STDOUT]                         "name": "main",
suite.setup.getIntercomPod: [STDOUT]                         "ready": true,
suite.setup.getIntercomPod: [STDOUT]                         "restartCount": 0,
suite.setup.getIntercomPod: [STDOUT]                         "started": true,
suite.setup.getIntercomPod: [STDOUT]                         "state": {
suite.setup.getIntercomPod: [STDOUT]                             "running": {
suite.setup.getIntercomPod: [STDOUT]                                 "startedAt": "2021-06-11T07:03:03Z"
suite.setup.getIntercomPod: [STDOUT]                             }
suite.setup.getIntercomPod: [STDOUT]                         }
suite.setup.getIntercomPod: [STDOUT]                     }
suite.setup.getIntercomPod: [STDOUT]                 ],
suite.setup.getIntercomPod: [STDOUT]                 "hostIP": "10.50.178.97",
suite.setup.getIntercomPod: [STDOUT]                 "phase": "Running",
suite.setup.getIntercomPod: [STDOUT]                 "podIP": "10.50.130.170",
suite.setup.getIntercomPod: [STDOUT]                 "podIPs": [
suite.setup.getIntercomPod: [STDOUT]                     {
suite.setup.getIntercomPod: [STDOUT]                         "ip": "10.50.130.170"
suite.setup.getIntercomPod: [STDOUT]                     }
suite.setup.getIntercomPod: [STDOUT]                 ],
suite.setup.getIntercomPod: [STDOUT]                 "qosClass": "BestEffort",
suite.setup.getIntercomPod: [STDOUT]                 "startTime": "2021-06-11T07:02:58Z"
suite.setup.getIntercomPod: [STDOUT]             }
suite.setup.getIntercomPod: [STDOUT]         }
suite.setup.getIntercomPod: [STDOUT]     ],
suite.setup.getIntercomPod: [STDOUT]     "kind": "List",
suite.setup.getIntercomPod: [STDOUT]     "metadata": {
suite.setup.getIntercomPod: [STDOUT]         "resourceVersion": "",
suite.setup.getIntercomPod: [STDOUT]         "selfLink": ""
suite.setup.getIntercomPod: [STDOUT]     }
suite.setup.getIntercomPod: [STDOUT] }
suite.setup.getIntercomPod: Captured variable: suite.setup.getIntercomPod.IntPod=intercom-client-6fd98bb7fd-k86z2
suite.setup.getIntercomPod: Captured variable: suite.setup.getIntercomPod.status=0
suite.setup.getIntercomPod: Validating condition 'status equal 0'
suite.setup.getIntercomPod: Expect condition 'status equal 0' passed
suite.setup.getIntercomPod: [OK] Execution results match all expected results
suite.setup.getIntercomPod: Completed iteration #0 with status: PASS
===== suite.setup.getIntercomPod: PASS in 14.185432003s (1 iterations)
suite.setup.AccesssecretKey-AccessHashKey-generation: Starting task execution
suite.setup.AccesssecretKey-AccessHashKey-generation: Replacing task placeholders (if any)
suite.setup.AccesssecretKey-AccessHashKey-generation: Start iteration #0
suite.setup.AccesssecretKey-AccessHashKey-generation: Executing script: 'kubectl exec -n aws-compute-tibco-tenantx intercom-client-6fd98bb7fd-k86z2 -- curl -s -H X-Atmosphere-For-User:qa -X POST http://router.aws-compute-tibco-system.svc.cluster.local:90/infra/accesskeys'
suite.setup.AccesssecretKey-AccessHashKey-generation: [STDOUT] {"accessKeySecret":"xqARYbIwAQ3++538tfm8Soa8AuC0090HR16L3S6NKAA","accessKeyHash":"{PBKDF2-43}40000:+c7W6sE8boid6w9rwMpWJw:rEJ1vXnEW0UGqmKEojyf5u6YQnTGD962M+Dnldk3Gu4"}
suite.setup.AccesssecretKey-AccessHashKey-generation: Captured variable: suite.setup.AccesssecretKey-AccessHashKey-generation.accesskey=xqARYbIwAQ3++538tfm8Soa8AuC0090HR16L3S6NKAA
suite.setup.AccesssecretKey-AccessHashKey-generation: Captured variable: suite.setup.AccesssecretKey-AccessHashKey-generation.accesshash={PBKDF2-43}40000:+c7W6sE8boid6w9rwMpWJw:rEJ1vXnEW0UGqmKEojyf5u6YQnTGD962M+Dnldk3Gu4
suite.setup.AccesssecretKey-AccessHashKey-generation: Captured variable: suite.setup.AccesssecretKey-AccessHashKey-generation.status=0
suite.setup.AccesssecretKey-AccessHashKey-generation: Validating condition 'status equal 0'
suite.setup.AccesssecretKey-AccessHashKey-generation: Expect condition 'status equal 0' passed
suite.setup.AccesssecretKey-AccessHashKey-generation: [OK] Execution results match all expected results
suite.setup.AccesssecretKey-AccessHashKey-generation: Completed iteration #0 with status: PASS
===== suite.setup.AccesssecretKey-AccessHashKey-generation: PASS in 14.596121851s (1 iterations)
suite.setup.tibTunnelConfigureDefaultProfile: Starting task execution
suite.setup.tibTunnelConfigureDefaultProfile: Replacing task placeholders (if any)
suite.setup.tibTunnelConfigureDefaultProfile: Start iteration #0
suite.setup.tibTunnelConfigureDefaultProfile: Executing script: '/bin/bash -c ./tibtunnel configure -a xqARYbIwAQ3++538tfm8Soa8AuC0090HR16L3S6NKAA'
suite.setup.tibTunnelConfigureDefaultProfile: [STDOUT] Configuration for profile 'default' was successfully saved
suite.setup.tibTunnelConfigureDefaultProfile: Captured variable: suite.setup.tibTunnelConfigureDefaultProfile.output=Configuration for profile 'default' was successfully saved
suite.setup.tibTunnelConfigureDefaultProfile: Captured variable: suite.setup.tibTunnelConfigureDefaultProfile.status=0
suite.setup.tibTunnelConfigureDefaultProfile: Validating condition 'output containsStr Configuration for profile 'default' was successfully saved'
suite.setup.tibTunnelConfigureDefaultProfile: Expect condition 'output containsStr Configuration for profile 'default' was successfully saved' passed
suite.setup.tibTunnelConfigureDefaultProfile: [OK] Execution results match all expected results
suite.setup.tibTunnelConfigureDefaultProfile: Completed iteration #0 with status: PASS
===== suite.setup.tibTunnelConfigureDefaultProfile: PASS in 0.032943255s (1 iterations)
suite.setup.verifyProfileSaved: Starting task execution
suite.setup.verifyProfileSaved: Replacing task placeholders (if any)
suite.setup.verifyProfileSaved: Start iteration #0
suite.setup.verifyProfileSaved: Executing script: '/bin/bash -c cat ~/.tibtunnel/credentials'
suite.setup.verifyProfileSaved: [STDOUT] [suyog]
suite.setup.verifyProfileSaved: [STDOUT] accessKey = AIjGONHIm5ORuQ6d0SrGyIzAvzlUAjpPfKm/ClzSoe0
suite.setup.verifyProfileSaved: [STDOUT] 
suite.setup.verifyProfileSaved: [STDOUT] [ankush]
suite.setup.verifyProfileSaved: [STDOUT] accessKey = D7eyrhPJM6UNVnUGsjqc3BfSgmK7pNn/Z5wDon9p4Hk
suite.setup.verifyProfileSaved: [STDOUT] 
suite.setup.verifyProfileSaved: [STDOUT] [test]
suite.setup.verifyProfileSaved: [STDOUT] accessKey = j0v2fMbjekUjrXttVQrViLLW/KJwjIsy4iTSbCs2cTI
suite.setup.verifyProfileSaved: [STDOUT] 
suite.setup.verifyProfileSaved: [STDOUT] [XYZ]
suite.setup.verifyProfileSaved: [STDOUT] accessKey = QOzKm8pIg6yYyuGldTxPk3B+xTXkPLu/t7dknflSYxY
suite.setup.verifyProfileSaved: [STDOUT] 
suite.setup.verifyProfileSaved: [STDOUT] [XYZZZZ]
suite.setup.verifyProfileSaved: [STDOUT] accessKey = aOhaz/z9f8znHLRoBX5uOBvpaznmBCLA7N946EPci6E
suite.setup.verifyProfileSaved: [STDOUT] 
suite.setup.verifyProfileSaved: [STDOUT] [default]
suite.setup.verifyProfileSaved: [STDOUT] accessKey = xqARYbIwAQ3++538tfm8Soa8AuC0090HR16L3S6NKAA
suite.setup.verifyProfileSaved: [STDOUT] 
suite.setup.verifyProfileSaved: Captured variable: suite.setup.verifyProfileSaved.output=[suyog]
accessKey = AIjGONHIm5ORuQ6d0SrGyIzAvzlUAjpPfKm/ClzSoe0

[ankush]
accessKey = D7eyrhPJM6UNVnUGsjqc3BfSgmK7pNn/Z5wDon9p4Hk

[test]
accessKey = j0v2fMbjekUjrXttVQrViLLW/KJwjIsy4iTSbCs2cTI

[XYZ]
accessKey = QOzKm8pIg6yYyuGldTxPk3B+xTXkPLu/t7dknflSYxY

[XYZZZZ]
accessKey = aOhaz/z9f8znHLRoBX5uOBvpaznmBCLA7N946EPci6E

[default]
accessKey = xqARYbIwAQ3++538tfm8Soa8AuC0090HR16L3S6NKAA

suite.setup.verifyProfileSaved: Captured variable: suite.setup.verifyProfileSaved.status=0
suite.setup.verifyProfileSaved: Validating condition 'output containsStr xqARYbIwAQ3++538tfm8Soa8AuC0090HR16L3S6NKAA'
suite.setup.verifyProfileSaved: Expect condition 'output containsStr xqARYbIwAQ3++538tfm8Soa8AuC0090HR16L3S6NKAA' passed
suite.setup.verifyProfileSaved: [OK] Execution results match all expected results
suite.setup.verifyProfileSaved: Completed iteration #0 with status: PASS
===== suite.setup.verifyProfileSaved: PASS in 0.006975804s (1 iterations)
deployCR: Starting task execution
deployCR: Replacing task placeholders (if any)
deployCR: Generating templates...
deployCR: Generating file '/Users/akusingh/Github_Desktop/HybridProxyOperator-Automation/generated/tibcotunnelrouteCR.yaml' from template '/Users/akusingh/Github_Desktop/HybridProxyOperator-Automation/resources/services/tibcotunnelrouteCR.yaml'
deployCR: Start iteration #0
deployCR: Executing script: 'kubectl apply -f ./generated/tibcotunnelrouteCR.yaml'
deployCR: [STDOUT] tibcotunnelroute.cloud.tibco.com/tcp-client-vs configured
deployCR: Captured variable: deployCR.status=0
deployCR: Validating condition 'status equal 0'
deployCR: Expect condition 'status equal 0' passed
deployCR: [OK] Execution results match all expected results
deployCR: Completed iteration #0 with status: PASS
===== deployCR: PASS in 12.449169541s (1 iterations)
tibcotunnelroute-status: Starting task execution
tibcotunnelroute-status: Replacing task placeholders (if any)
tibcotunnelroute-status: Start iteration #0
tibcotunnelroute-status: Executing script: 'kubectl get tibcotunnelroute tcp-client-vs -n aws-compute-tibco-tenantx -o json'
tibcotunnelroute-status: [STDOUT] {
tibcotunnelroute-status: [STDOUT]     "apiVersion": "cloud.tibco.com/v1",
tibcotunnelroute-status: [STDOUT]     "kind": "TibcoTunnelRoute",
tibcotunnelroute-status: [STDOUT]     "metadata": {
tibcotunnelroute-status: [STDOUT]         "annotations": {
tibcotunnelroute-status: [STDOUT]             "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cloud.tibco.com/v1\",\"kind\":\"TibcoTunnelRoute\",\"metadata\":{\"annotations\":{},\"name\":\"tcp-client-vs\",\"namespace\":\"aws-compute-tibco-tenantx\"},\"spec\":{\"endpoint\":{\"config\":\"accesskey\",\"configVariables\":{\"ACCESS_KEY_HASH\":\"{PBKDF2-43}40000:+c7W6sE8boid6w9rwMpWJw:rEJ1vXnEW0UGqmKEojyf5u6YQnTGD962M+Dnldk3Gu4\"},\"fqdn\":\"tenantx-tunnel.compute-dev.eu-west-1.tcie.pro\",\"path\":\"/tcp-client2\"},\"selector\":{\"app.kubernetes.io/name\":\"tcp-client\"}}}\n"
tibcotunnelroute-status: [STDOUT]         },
tibcotunnelroute-status: [STDOUT]         "creationTimestamp": "2021-06-11T08:22:47Z",
tibcotunnelroute-status: [STDOUT]         "generation": 2,
tibcotunnelroute-status: [STDOUT]         "managedFields": [
tibcotunnelroute-status: [STDOUT]             {
tibcotunnelroute-status: [STDOUT]                 "apiVersion": "cloud.tibco.com/v1",
tibcotunnelroute-status: [STDOUT]                 "fieldsType": "FieldsV1",
tibcotunnelroute-status: [STDOUT]                 "fieldsV1": {
tibcotunnelroute-status: [STDOUT]                     "f:status": {
tibcotunnelroute-status: [STDOUT]                         ".": {},
tibcotunnelroute-status: [STDOUT]                         "f:resource": {
tibcotunnelroute-status: [STDOUT]                             ".": {},
tibcotunnelroute-status: [STDOUT]                             "f:state": {}
tibcotunnelroute-status: [STDOUT]                         }
tibcotunnelroute-status: [STDOUT]                     }
tibcotunnelroute-status: [STDOUT]                 },
tibcotunnelroute-status: [STDOUT]                 "manager": "cicinfra-cic2-hybrid-proxy-operator",
tibcotunnelroute-status: [STDOUT]                 "operation": "Update",
tibcotunnelroute-status: [STDOUT]                 "time": "2021-06-11T08:22:47Z"
tibcotunnelroute-status: [STDOUT]             },
tibcotunnelroute-status: [STDOUT]             {
tibcotunnelroute-status: [STDOUT]                 "apiVersion": "cloud.tibco.com/v1",
tibcotunnelroute-status: [STDOUT]                 "fieldsType": "FieldsV1",
tibcotunnelroute-status: [STDOUT]                 "fieldsV1": {
tibcotunnelroute-status: [STDOUT]                     "f:metadata": {
tibcotunnelroute-status: [STDOUT]                         "f:annotations": {
tibcotunnelroute-status: [STDOUT]                             ".": {},
tibcotunnelroute-status: [STDOUT]                             "f:kubectl.kubernetes.io/last-applied-configuration": {}
tibcotunnelroute-status: [STDOUT]                         }
tibcotunnelroute-status: [STDOUT]                     },
tibcotunnelroute-status: [STDOUT]                     "f:spec": {
tibcotunnelroute-status: [STDOUT]                         ".": {},
tibcotunnelroute-status: [STDOUT]                         "f:endpoint": {
tibcotunnelroute-status: [STDOUT]                             ".": {},
tibcotunnelroute-status: [STDOUT]                             "f:config": {},
tibcotunnelroute-status: [STDOUT]                             "f:configVariables": {
tibcotunnelroute-status: [STDOUT]                                 ".": {},
tibcotunnelroute-status: [STDOUT]                                 "f:ACCESS_KEY_HASH": {}
tibcotunnelroute-status: [STDOUT]                             },
tibcotunnelroute-status: [STDOUT]                             "f:fqdn": {},
tibcotunnelroute-status: [STDOUT]                             "f:path": {}
tibcotunnelroute-status: [STDOUT]                         },
tibcotunnelroute-status: [STDOUT]                         "f:selector": {
tibcotunnelroute-status: [STDOUT]                             ".": {},
tibcotunnelroute-status: [STDOUT]                             "f:app.kubernetes.io/name": {}
tibcotunnelroute-status: [STDOUT]                         }
tibcotunnelroute-status: [STDOUT]                     }
tibcotunnelroute-status: [STDOUT]                 },
tibcotunnelroute-status: [STDOUT]                 "manager": "kubectl-client-side-apply",
tibcotunnelroute-status: [STDOUT]                 "operation": "Update",
tibcotunnelroute-status: [STDOUT]                 "time": "2021-06-11T08:22:47Z"
tibcotunnelroute-status: [STDOUT]             }
tibcotunnelroute-status: [STDOUT]         ],
tibcotunnelroute-status: [STDOUT]         "name": "tcp-client-vs",
tibcotunnelroute-status: [STDOUT]         "namespace": "aws-compute-tibco-tenantx",
tibcotunnelroute-status: [STDOUT]         "resourceVersion": "60655",
tibcotunnelroute-status: [STDOUT]         "uid": "e7fbac60-4238-4dfd-980d-155cd7d52870"
tibcotunnelroute-status: [STDOUT]     },
tibcotunnelroute-status: [STDOUT]     "spec": {
tibcotunnelroute-status: [STDOUT]         "endpoint": {
tibcotunnelroute-status: [STDOUT]             "config": "accesskey",
tibcotunnelroute-status: [STDOUT]             "configVariables": {
tibcotunnelroute-status: [STDOUT]                 "ACCESS_KEY_HASH": "{PBKDF2-43}40000:+c7W6sE8boid6w9rwMpWJw:rEJ1vXnEW0UGqmKEojyf5u6YQnTGD962M+Dnldk3Gu4"
tibcotunnelroute-status: [STDOUT]             },
tibcotunnelroute-status: [STDOUT]             "fqdn": "tenantx-tunnel.compute-dev.eu-west-1.tcie.pro",
tibcotunnelroute-status: [STDOUT]             "path": "/tcp-client2"
tibcotunnelroute-status: [STDOUT]         },
tibcotunnelroute-status: [STDOUT]         "selector": {
tibcotunnelroute-status: [STDOUT]             "app.kubernetes.io/name": "tcp-client"
tibcotunnelroute-status: [STDOUT]         }
tibcotunnelroute-status: [STDOUT]     },
tibcotunnelroute-status: [STDOUT]     "status": {
tibcotunnelroute-status: [STDOUT]         "resource": {
tibcotunnelroute-status: [STDOUT]             "state": "processed"
tibcotunnelroute-status: [STDOUT]         }
tibcotunnelroute-status: [STDOUT]     }
tibcotunnelroute-status: [STDOUT] }
tibcotunnelroute-status: Captured variable: tibcotunnelroute-status.status_cr=processed
tibcotunnelroute-status: Captured variable: tibcotunnelroute-status.status=0
tibcotunnelroute-status: Validating condition 'status equal 0'
tibcotunnelroute-status: Expect condition 'status equal 0' passed
tibcotunnelroute-status: Validating condition 'status_cr containsStr processed'
tibcotunnelroute-status: Expect condition 'status_cr containsStr processed' passed
tibcotunnelroute-status: [OK] Execution results match all expected results
tibcotunnelroute-status: Completed iteration #0 with status: PASS
===== tibcotunnelroute-status: PASS in 3.825410015s (1 iterations)
deployClientApp: Starting task execution
deployClientApp: Replacing task placeholders (if any)
deployClientApp: Generating templates...
deployClientApp: Generating file '/Users/akusingh/Github_Desktop/HybridProxyOperator-Automation/generated/client-app.yaml' from template '/Users/akusingh/Github_Desktop/HybridProxyOperator-Automation/resources/services/client-app.yaml'
deployClientApp: Start iteration #0
deployClientApp: Executing script: 'kubectl apply -f ./generated/client-app.yaml'
deployClientApp: [STDOUT] deployment.apps/tcp-client-vs-1 unchanged
deployClientApp: Captured variable: deployClientApp.status=0
deployClientApp: Validating condition 'status equal 0'
deployClientApp: Expect condition 'status equal 0' passed
deployClientApp: [OK] Execution results match all expected results
deployClientApp: Completed iteration #0 with status: PASS
===== deployClientApp: PASS in 9.847556843s (1 iterations)
status_of-clientAppn: Starting task execution
status_of-clientAppn: Replacing task placeholders (if any)
status_of-clientAppn: Start iteration #0
status_of-clientAppn: Executing script: 'kubectl get pods -n aws-compute-tibco-tenantx -o json --selector=app=http'
status_of-clientAppn: [STDOUT] {
status_of-clientAppn: [STDOUT]     "apiVersion": "v1",
status_of-clientAppn: [STDOUT]     "items": [
status_of-clientAppn: [STDOUT]         {
status_of-clientAppn: [STDOUT]             "apiVersion": "v1",
status_of-clientAppn: [STDOUT]             "kind": "Pod",
status_of-clientAppn: [STDOUT]             "metadata": {
status_of-clientAppn: [STDOUT]                 "annotations": {
status_of-clientAppn: [STDOUT]                     "kubernetes.io/psp": "eks.privileged"
status_of-clientAppn: [STDOUT]                 },
status_of-clientAppn: [STDOUT]                 "creationTimestamp": "2021-06-11T08:23:05Z",
status_of-clientAppn: [STDOUT]                 "generateName": "tcp-client-vs-1-68cdc89586-",
status_of-clientAppn: [STDOUT]                 "labels": {
status_of-clientAppn: [STDOUT]                     "app": "http",
status_of-clientAppn: [STDOUT]                     "app.cloud.tibco.com/owner": "local",
status_of-clientAppn: [STDOUT]                     "app.cloud.tibco.com/tunnel": "enabled",
status_of-clientAppn: [STDOUT]                     "app.kubernetes.io/name": "tcp-client",
status_of-clientAppn: [STDOUT]                     "pod-template-hash": "68cdc89586"
status_of-clientAppn: [STDOUT]                 },
status_of-clientAppn: [STDOUT]                 "managedFields": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "apiVersion": "v1",
status_of-clientAppn: [STDOUT]                         "fieldsType": "FieldsV1",
status_of-clientAppn: [STDOUT]                         "fieldsV1": {
status_of-clientAppn: [STDOUT]                             "f:metadata": {
status_of-clientAppn: [STDOUT]                                 "f:generateName": {},
status_of-clientAppn: [STDOUT]                                 "f:labels": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "f:app": {},
status_of-clientAppn: [STDOUT]                                     "f:app.cloud.tibco.com/owner": {},
status_of-clientAppn: [STDOUT]                                     "f:app.cloud.tibco.com/tunnel": {},
status_of-clientAppn: [STDOUT]                                     "f:app.kubernetes.io/name": {},
status_of-clientAppn: [STDOUT]                                     "f:pod-template-hash": {}
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:ownerReferences": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "k:{\"uid\":\"72a9a586-5bdf-4271-ab6e-638b9def7049\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:apiVersion": {},
status_of-clientAppn: [STDOUT]                                         "f:blockOwnerDeletion": {},
status_of-clientAppn: [STDOUT]                                         "f:controller": {},
status_of-clientAppn: [STDOUT]                                         "f:kind": {},
status_of-clientAppn: [STDOUT]                                         "f:name": {},
status_of-clientAppn: [STDOUT]                                         "f:uid": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 }
status_of-clientAppn: [STDOUT]                             },
status_of-clientAppn: [STDOUT]                             "f:spec": {
status_of-clientAppn: [STDOUT]                                 "f:containers": {
status_of-clientAppn: [STDOUT]                                     "k:{\"name\":\"container-agent\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:image": {},
status_of-clientAppn: [STDOUT]                                         "f:imagePullPolicy": {},
status_of-clientAppn: [STDOUT]                                         "f:name": {},
status_of-clientAppn: [STDOUT]                                         "f:resources": {},
status_of-clientAppn: [STDOUT]                                         "f:securityContext": {
status_of-clientAppn: [STDOUT]                                             ".": {},
status_of-clientAppn: [STDOUT]                                             "f:capabilities": {
status_of-clientAppn: [STDOUT]                                                 ".": {},
status_of-clientAppn: [STDOUT]                                                 "f:add": {}
status_of-clientAppn: [STDOUT]                                             }
status_of-clientAppn: [STDOUT]                                         },
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePath": {},
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePolicy": {}
status_of-clientAppn: [STDOUT]                                     },
status_of-clientAppn: [STDOUT]                                     "k:{\"name\":\"main\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:image": {},
status_of-clientAppn: [STDOUT]                                         "f:imagePullPolicy": {},
status_of-clientAppn: [STDOUT]                                         "f:name": {},
status_of-clientAppn: [STDOUT]                                         "f:resources": {},
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePath": {},
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePolicy": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:dnsPolicy": {},
status_of-clientAppn: [STDOUT]                                 "f:enableServiceLinks": {},
status_of-clientAppn: [STDOUT]                                 "f:nodeSelector": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "f:kubernetes.io/os": {}
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:restartPolicy": {},
status_of-clientAppn: [STDOUT]                                 "f:schedulerName": {},
status_of-clientAppn: [STDOUT]                                 "f:securityContext": {},
status_of-clientAppn: [STDOUT]                                 "f:terminationGracePeriodSeconds": {}
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         },
status_of-clientAppn: [STDOUT]                         "manager": "kube-controller-manager",
status_of-clientAppn: [STDOUT]                         "operation": "Update",
status_of-clientAppn: [STDOUT]                         "time": "2021-06-11T08:23:05Z"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "apiVersion": "v1",
status_of-clientAppn: [STDOUT]                         "fieldsType": "FieldsV1",
status_of-clientAppn: [STDOUT]                         "fieldsV1": {
status_of-clientAppn: [STDOUT]                             "f:status": {
status_of-clientAppn: [STDOUT]                                 "f:conditions": {
status_of-clientAppn: [STDOUT]                                     "k:{\"type\":\"ContainersReady\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:lastProbeTime": {},
status_of-clientAppn: [STDOUT]                                         "f:lastTransitionTime": {},
status_of-clientAppn: [STDOUT]                                         "f:status": {},
status_of-clientAppn: [STDOUT]                                         "f:type": {}
status_of-clientAppn: [STDOUT]                                     },
status_of-clientAppn: [STDOUT]                                     "k:{\"type\":\"Initialized\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:lastProbeTime": {},
status_of-clientAppn: [STDOUT]                                         "f:lastTransitionTime": {},
status_of-clientAppn: [STDOUT]                                         "f:status": {},
status_of-clientAppn: [STDOUT]                                         "f:type": {}
status_of-clientAppn: [STDOUT]                                     },
status_of-clientAppn: [STDOUT]                                     "k:{\"type\":\"Ready\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:lastProbeTime": {},
status_of-clientAppn: [STDOUT]                                         "f:lastTransitionTime": {},
status_of-clientAppn: [STDOUT]                                         "f:status": {},
status_of-clientAppn: [STDOUT]                                         "f:type": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:containerStatuses": {},
status_of-clientAppn: [STDOUT]                                 "f:hostIP": {},
status_of-clientAppn: [STDOUT]                                 "f:phase": {},
status_of-clientAppn: [STDOUT]                                 "f:podIP": {},
status_of-clientAppn: [STDOUT]                                 "f:podIPs": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "k:{\"ip\":\"10.50.137.209\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:ip": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:startTime": {}
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         },
status_of-clientAppn: [STDOUT]                         "manager": "kubelet",
status_of-clientAppn: [STDOUT]                         "operation": "Update",
status_of-clientAppn: [STDOUT]                         "time": "2021-06-11T08:23:09Z"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "name": "tcp-client-vs-1-68cdc89586-flxd2",
status_of-clientAppn: [STDOUT]                 "namespace": "aws-compute-tibco-tenantx",
status_of-clientAppn: [STDOUT]                 "ownerReferences": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "apiVersion": "apps/v1",
status_of-clientAppn: [STDOUT]                         "blockOwnerDeletion": true,
status_of-clientAppn: [STDOUT]                         "controller": true,
status_of-clientAppn: [STDOUT]                         "kind": "ReplicaSet",
status_of-clientAppn: [STDOUT]                         "name": "tcp-client-vs-1-68cdc89586",
status_of-clientAppn: [STDOUT]                         "uid": "72a9a586-5bdf-4271-ab6e-638b9def7049"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "resourceVersion": "59540",
status_of-clientAppn: [STDOUT]                 "uid": "4c505af8-2e73-4092-bc37-b807f4c8d084"
status_of-clientAppn: [STDOUT]             },
status_of-clientAppn: [STDOUT]             "spec": {
status_of-clientAppn: [STDOUT]                 "containers": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server:latest",
status_of-clientAppn: [STDOUT]                         "imagePullPolicy": "Always",
status_of-clientAppn: [STDOUT]                         "name": "container-agent",
status_of-clientAppn: [STDOUT]                         "resources": {},
status_of-clientAppn: [STDOUT]                         "securityContext": {
status_of-clientAppn: [STDOUT]                             "capabilities": {
status_of-clientAppn: [STDOUT]                                 "add": [
status_of-clientAppn: [STDOUT]                                     "NET_ADMIN"
status_of-clientAppn: [STDOUT]                                 ]
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         },
status_of-clientAppn: [STDOUT]                         "terminationMessagePath": "/dev/termination-log",
status_of-clientAppn: [STDOUT]                         "terminationMessagePolicy": "File",
status_of-clientAppn: [STDOUT]                         "volumeMounts": [
status_of-clientAppn: [STDOUT]                             {
status_of-clientAppn: [STDOUT]                                 "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
status_of-clientAppn: [STDOUT]                                 "name": "default-token-bjfvs",
status_of-clientAppn: [STDOUT]                                 "readOnly": true
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         ]
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client:latest",
status_of-clientAppn: [STDOUT]                         "imagePullPolicy": "Always",
status_of-clientAppn: [STDOUT]                         "name": "main",
status_of-clientAppn: [STDOUT]                         "resources": {},
status_of-clientAppn: [STDOUT]                         "terminationMessagePath": "/dev/termination-log",
status_of-clientAppn: [STDOUT]                         "terminationMessagePolicy": "File",
status_of-clientAppn: [STDOUT]                         "volumeMounts": [
status_of-clientAppn: [STDOUT]                             {
status_of-clientAppn: [STDOUT]                                 "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
status_of-clientAppn: [STDOUT]                                 "name": "default-token-bjfvs",
status_of-clientAppn: [STDOUT]                                 "readOnly": true
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         ]
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "dnsPolicy": "ClusterFirst",
status_of-clientAppn: [STDOUT]                 "enableServiceLinks": true,
status_of-clientAppn: [STDOUT]                 "nodeName": "ip-10-50-178-97.eu-west-1.compute.internal",
status_of-clientAppn: [STDOUT]                 "nodeSelector": {
status_of-clientAppn: [STDOUT]                     "kubernetes.io/os": "linux"
status_of-clientAppn: [STDOUT]                 },
status_of-clientAppn: [STDOUT]                 "preemptionPolicy": "PreemptLowerPriority",
status_of-clientAppn: [STDOUT]                 "priority": 0,
status_of-clientAppn: [STDOUT]                 "restartPolicy": "Always",
status_of-clientAppn: [STDOUT]                 "schedulerName": "default-scheduler",
status_of-clientAppn: [STDOUT]                 "securityContext": {},
status_of-clientAppn: [STDOUT]                 "serviceAccount": "default",
status_of-clientAppn: [STDOUT]                 "serviceAccountName": "default",
status_of-clientAppn: [STDOUT]                 "terminationGracePeriodSeconds": 30,
status_of-clientAppn: [STDOUT]                 "tolerations": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "effect": "NoExecute",
status_of-clientAppn: [STDOUT]                         "key": "node.kubernetes.io/not-ready",
status_of-clientAppn: [STDOUT]                         "operator": "Exists",
status_of-clientAppn: [STDOUT]                         "tolerationSeconds": 300
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "effect": "NoExecute",
status_of-clientAppn: [STDOUT]                         "key": "node.kubernetes.io/unreachable",
status_of-clientAppn: [STDOUT]                         "operator": "Exists",
status_of-clientAppn: [STDOUT]                         "tolerationSeconds": 300
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "volumes": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "name": "default-token-bjfvs",
status_of-clientAppn: [STDOUT]                         "secret": {
status_of-clientAppn: [STDOUT]                             "defaultMode": 420,
status_of-clientAppn: [STDOUT]                             "secretName": "default-token-bjfvs"
status_of-clientAppn: [STDOUT]                         }
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ]
status_of-clientAppn: [STDOUT]             },
status_of-clientAppn: [STDOUT]             "status": {
status_of-clientAppn: [STDOUT]                 "conditions": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:05Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "Initialized"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:09Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "Ready"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:09Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "ContainersReady"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:05Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "PodScheduled"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "containerStatuses": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "containerID": "docker://c7febc4726a44caf6f5e0021e0b5a6957a72941a8d7762497a3af407859bd263",
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server:latest",
status_of-clientAppn: [STDOUT]                         "imageID": "docker-pullable://664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server@sha256:515fa7b1088a4f321fff43d948ca5b12a27a4e91edc043bc73c99d1f481ce9aa",
status_of-clientAppn: [STDOUT]                         "lastState": {},
status_of-clientAppn: [STDOUT]                         "name": "container-agent",
status_of-clientAppn: [STDOUT]                         "ready": true,
status_of-clientAppn: [STDOUT]                         "restartCount": 0,
status_of-clientAppn: [STDOUT]                         "started": true,
status_of-clientAppn: [STDOUT]                         "state": {
status_of-clientAppn: [STDOUT]                             "running": {
status_of-clientAppn: [STDOUT]                                 "startedAt": "2021-06-11T08:23:08Z"
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         }
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "containerID": "docker://5c26c88c3e71e68ab7a70d74c767c0016afbfc7c8efc2f31a6f67d64f97128c4",
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client:latest",
status_of-clientAppn: [STDOUT]                         "imageID": "docker-pullable://664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client@sha256:0338dea216ff033aed52f448688bde2fe7f5b6f4e608faadde32c583a986d90b",
status_of-clientAppn: [STDOUT]                         "lastState": {},
status_of-clientAppn: [STDOUT]                         "name": "main",
status_of-clientAppn: [STDOUT]                         "ready": true,
status_of-clientAppn: [STDOUT]                         "restartCount": 0,
status_of-clientAppn: [STDOUT]                         "started": true,
status_of-clientAppn: [STDOUT]                         "state": {
status_of-clientAppn: [STDOUT]                             "running": {
status_of-clientAppn: [STDOUT]                                 "startedAt": "2021-06-11T08:23:09Z"
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         }
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "hostIP": "10.50.178.97",
status_of-clientAppn: [STDOUT]                 "phase": "Running",
status_of-clientAppn: [STDOUT]                 "podIP": "10.50.137.209",
status_of-clientAppn: [STDOUT]                 "podIPs": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "ip": "10.50.137.209"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "qosClass": "BestEffort",
status_of-clientAppn: [STDOUT]                 "startTime": "2021-06-11T08:23:05Z"
status_of-clientAppn: [STDOUT]             }
status_of-clientAppn: [STDOUT]         },
status_of-clientAppn: [STDOUT]         {
status_of-clientAppn: [STDOUT]             "apiVersion": "v1",
status_of-clientAppn: [STDOUT]             "kind": "Pod",
status_of-clientAppn: [STDOUT]             "metadata": {
status_of-clientAppn: [STDOUT]                 "annotations": {
status_of-clientAppn: [STDOUT]                     "kubernetes.io/psp": "eks.privileged"
status_of-clientAppn: [STDOUT]                 },
status_of-clientAppn: [STDOUT]                 "creationTimestamp": "2021-06-11T08:23:05Z",
status_of-clientAppn: [STDOUT]                 "generateName": "tcp-client-vs-1-68cdc89586-",
status_of-clientAppn: [STDOUT]                 "labels": {
status_of-clientAppn: [STDOUT]                     "app": "http",
status_of-clientAppn: [STDOUT]                     "app.cloud.tibco.com/owner": "local",
status_of-clientAppn: [STDOUT]                     "app.cloud.tibco.com/tunnel": "enabled",
status_of-clientAppn: [STDOUT]                     "app.kubernetes.io/name": "tcp-client",
status_of-clientAppn: [STDOUT]                     "pod-template-hash": "68cdc89586"
status_of-clientAppn: [STDOUT]                 },
status_of-clientAppn: [STDOUT]                 "managedFields": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "apiVersion": "v1",
status_of-clientAppn: [STDOUT]                         "fieldsType": "FieldsV1",
status_of-clientAppn: [STDOUT]                         "fieldsV1": {
status_of-clientAppn: [STDOUT]                             "f:metadata": {
status_of-clientAppn: [STDOUT]                                 "f:generateName": {},
status_of-clientAppn: [STDOUT]                                 "f:labels": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "f:app": {},
status_of-clientAppn: [STDOUT]                                     "f:app.cloud.tibco.com/owner": {},
status_of-clientAppn: [STDOUT]                                     "f:app.cloud.tibco.com/tunnel": {},
status_of-clientAppn: [STDOUT]                                     "f:app.kubernetes.io/name": {},
status_of-clientAppn: [STDOUT]                                     "f:pod-template-hash": {}
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:ownerReferences": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "k:{\"uid\":\"72a9a586-5bdf-4271-ab6e-638b9def7049\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:apiVersion": {},
status_of-clientAppn: [STDOUT]                                         "f:blockOwnerDeletion": {},
status_of-clientAppn: [STDOUT]                                         "f:controller": {},
status_of-clientAppn: [STDOUT]                                         "f:kind": {},
status_of-clientAppn: [STDOUT]                                         "f:name": {},
status_of-clientAppn: [STDOUT]                                         "f:uid": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 }
status_of-clientAppn: [STDOUT]                             },
status_of-clientAppn: [STDOUT]                             "f:spec": {
status_of-clientAppn: [STDOUT]                                 "f:containers": {
status_of-clientAppn: [STDOUT]                                     "k:{\"name\":\"container-agent\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:image": {},
status_of-clientAppn: [STDOUT]                                         "f:imagePullPolicy": {},
status_of-clientAppn: [STDOUT]                                         "f:name": {},
status_of-clientAppn: [STDOUT]                                         "f:resources": {},
status_of-clientAppn: [STDOUT]                                         "f:securityContext": {
status_of-clientAppn: [STDOUT]                                             ".": {},
status_of-clientAppn: [STDOUT]                                             "f:capabilities": {
status_of-clientAppn: [STDOUT]                                                 ".": {},
status_of-clientAppn: [STDOUT]                                                 "f:add": {}
status_of-clientAppn: [STDOUT]                                             }
status_of-clientAppn: [STDOUT]                                         },
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePath": {},
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePolicy": {}
status_of-clientAppn: [STDOUT]                                     },
status_of-clientAppn: [STDOUT]                                     "k:{\"name\":\"main\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:image": {},
status_of-clientAppn: [STDOUT]                                         "f:imagePullPolicy": {},
status_of-clientAppn: [STDOUT]                                         "f:name": {},
status_of-clientAppn: [STDOUT]                                         "f:resources": {},
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePath": {},
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePolicy": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:dnsPolicy": {},
status_of-clientAppn: [STDOUT]                                 "f:enableServiceLinks": {},
status_of-clientAppn: [STDOUT]                                 "f:nodeSelector": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "f:kubernetes.io/os": {}
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:restartPolicy": {},
status_of-clientAppn: [STDOUT]                                 "f:schedulerName": {},
status_of-clientAppn: [STDOUT]                                 "f:securityContext": {},
status_of-clientAppn: [STDOUT]                                 "f:terminationGracePeriodSeconds": {}
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         },
status_of-clientAppn: [STDOUT]                         "manager": "kube-controller-manager",
status_of-clientAppn: [STDOUT]                         "operation": "Update",
status_of-clientAppn: [STDOUT]                         "time": "2021-06-11T08:23:05Z"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "apiVersion": "v1",
status_of-clientAppn: [STDOUT]                         "fieldsType": "FieldsV1",
status_of-clientAppn: [STDOUT]                         "fieldsV1": {
status_of-clientAppn: [STDOUT]                             "f:status": {
status_of-clientAppn: [STDOUT]                                 "f:conditions": {
status_of-clientAppn: [STDOUT]                                     "k:{\"type\":\"ContainersReady\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:lastProbeTime": {},
status_of-clientAppn: [STDOUT]                                         "f:lastTransitionTime": {},
status_of-clientAppn: [STDOUT]                                         "f:status": {},
status_of-clientAppn: [STDOUT]                                         "f:type": {}
status_of-clientAppn: [STDOUT]                                     },
status_of-clientAppn: [STDOUT]                                     "k:{\"type\":\"Initialized\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:lastProbeTime": {},
status_of-clientAppn: [STDOUT]                                         "f:lastTransitionTime": {},
status_of-clientAppn: [STDOUT]                                         "f:status": {},
status_of-clientAppn: [STDOUT]                                         "f:type": {}
status_of-clientAppn: [STDOUT]                                     },
status_of-clientAppn: [STDOUT]                                     "k:{\"type\":\"Ready\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:lastProbeTime": {},
status_of-clientAppn: [STDOUT]                                         "f:lastTransitionTime": {},
status_of-clientAppn: [STDOUT]                                         "f:status": {},
status_of-clientAppn: [STDOUT]                                         "f:type": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:containerStatuses": {},
status_of-clientAppn: [STDOUT]                                 "f:hostIP": {},
status_of-clientAppn: [STDOUT]                                 "f:phase": {},
status_of-clientAppn: [STDOUT]                                 "f:podIP": {},
status_of-clientAppn: [STDOUT]                                 "f:podIPs": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "k:{\"ip\":\"10.50.114.244\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:ip": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:startTime": {}
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         },
status_of-clientAppn: [STDOUT]                         "manager": "kubelet",
status_of-clientAppn: [STDOUT]                         "operation": "Update",
status_of-clientAppn: [STDOUT]                         "time": "2021-06-11T08:23:09Z"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "name": "tcp-client-vs-1-68cdc89586-fqlbf",
status_of-clientAppn: [STDOUT]                 "namespace": "aws-compute-tibco-tenantx",
status_of-clientAppn: [STDOUT]                 "ownerReferences": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "apiVersion": "apps/v1",
status_of-clientAppn: [STDOUT]                         "blockOwnerDeletion": true,
status_of-clientAppn: [STDOUT]                         "controller": true,
status_of-clientAppn: [STDOUT]                         "kind": "ReplicaSet",
status_of-clientAppn: [STDOUT]                         "name": "tcp-client-vs-1-68cdc89586",
status_of-clientAppn: [STDOUT]                         "uid": "72a9a586-5bdf-4271-ab6e-638b9def7049"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "resourceVersion": "59547",
status_of-clientAppn: [STDOUT]                 "uid": "c4384e42-cb2d-43d8-8f19-7fb3055f6e09"
status_of-clientAppn: [STDOUT]             },
status_of-clientAppn: [STDOUT]             "spec": {
status_of-clientAppn: [STDOUT]                 "containers": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server:latest",
status_of-clientAppn: [STDOUT]                         "imagePullPolicy": "Always",
status_of-clientAppn: [STDOUT]                         "name": "container-agent",
status_of-clientAppn: [STDOUT]                         "resources": {},
status_of-clientAppn: [STDOUT]                         "securityContext": {
status_of-clientAppn: [STDOUT]                             "capabilities": {
status_of-clientAppn: [STDOUT]                                 "add": [
status_of-clientAppn: [STDOUT]                                     "NET_ADMIN"
status_of-clientAppn: [STDOUT]                                 ]
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         },
status_of-clientAppn: [STDOUT]                         "terminationMessagePath": "/dev/termination-log",
status_of-clientAppn: [STDOUT]                         "terminationMessagePolicy": "File",
status_of-clientAppn: [STDOUT]                         "volumeMounts": [
status_of-clientAppn: [STDOUT]                             {
status_of-clientAppn: [STDOUT]                                 "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
status_of-clientAppn: [STDOUT]                                 "name": "default-token-bjfvs",
status_of-clientAppn: [STDOUT]                                 "readOnly": true
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         ]
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client:latest",
status_of-clientAppn: [STDOUT]                         "imagePullPolicy": "Always",
status_of-clientAppn: [STDOUT]                         "name": "main",
status_of-clientAppn: [STDOUT]                         "resources": {},
status_of-clientAppn: [STDOUT]                         "terminationMessagePath": "/dev/termination-log",
status_of-clientAppn: [STDOUT]                         "terminationMessagePolicy": "File",
status_of-clientAppn: [STDOUT]                         "volumeMounts": [
status_of-clientAppn: [STDOUT]                             {
status_of-clientAppn: [STDOUT]                                 "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
status_of-clientAppn: [STDOUT]                                 "name": "default-token-bjfvs",
status_of-clientAppn: [STDOUT]                                 "readOnly": true
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         ]
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "dnsPolicy": "ClusterFirst",
status_of-clientAppn: [STDOUT]                 "enableServiceLinks": true,
status_of-clientAppn: [STDOUT]                 "nodeName": "ip-10-50-103-165.eu-west-1.compute.internal",
status_of-clientAppn: [STDOUT]                 "nodeSelector": {
status_of-clientAppn: [STDOUT]                     "kubernetes.io/os": "linux"
status_of-clientAppn: [STDOUT]                 },
status_of-clientAppn: [STDOUT]                 "preemptionPolicy": "PreemptLowerPriority",
status_of-clientAppn: [STDOUT]                 "priority": 0,
status_of-clientAppn: [STDOUT]                 "restartPolicy": "Always",
status_of-clientAppn: [STDOUT]                 "schedulerName": "default-scheduler",
status_of-clientAppn: [STDOUT]                 "securityContext": {},
status_of-clientAppn: [STDOUT]                 "serviceAccount": "default",
status_of-clientAppn: [STDOUT]                 "serviceAccountName": "default",
status_of-clientAppn: [STDOUT]                 "terminationGracePeriodSeconds": 30,
status_of-clientAppn: [STDOUT]                 "tolerations": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "effect": "NoExecute",
status_of-clientAppn: [STDOUT]                         "key": "node.kubernetes.io/not-ready",
status_of-clientAppn: [STDOUT]                         "operator": "Exists",
status_of-clientAppn: [STDOUT]                         "tolerationSeconds": 300
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "effect": "NoExecute",
status_of-clientAppn: [STDOUT]                         "key": "node.kubernetes.io/unreachable",
status_of-clientAppn: [STDOUT]                         "operator": "Exists",
status_of-clientAppn: [STDOUT]                         "tolerationSeconds": 300
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "volumes": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "name": "default-token-bjfvs",
status_of-clientAppn: [STDOUT]                         "secret": {
status_of-clientAppn: [STDOUT]                             "defaultMode": 420,
status_of-clientAppn: [STDOUT]                             "secretName": "default-token-bjfvs"
status_of-clientAppn: [STDOUT]                         }
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ]
status_of-clientAppn: [STDOUT]             },
status_of-clientAppn: [STDOUT]             "status": {
status_of-clientAppn: [STDOUT]                 "conditions": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:05Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "Initialized"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:09Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "Ready"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:09Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "ContainersReady"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:05Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "PodScheduled"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "containerStatuses": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "containerID": "docker://426b63c03878598b9dc7a02aa9612916759d81f020b49e5897ee78eeff6743f8",
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server:latest",
status_of-clientAppn: [STDOUT]                         "imageID": "docker-pullable://664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server@sha256:515fa7b1088a4f321fff43d948ca5b12a27a4e91edc043bc73c99d1f481ce9aa",
status_of-clientAppn: [STDOUT]                         "lastState": {},
status_of-clientAppn: [STDOUT]                         "name": "container-agent",
status_of-clientAppn: [STDOUT]                         "ready": true,
status_of-clientAppn: [STDOUT]                         "restartCount": 0,
status_of-clientAppn: [STDOUT]                         "started": true,
status_of-clientAppn: [STDOUT]                         "state": {
status_of-clientAppn: [STDOUT]                             "running": {
status_of-clientAppn: [STDOUT]                                 "startedAt": "2021-06-11T08:23:08Z"
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         }
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "containerID": "docker://c11f794f7d51ecf46fa9a4449a0c3457dafae8e38f5568499c572931058c244e",
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client:latest",
status_of-clientAppn: [STDOUT]                         "imageID": "docker-pullable://664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client@sha256:0338dea216ff033aed52f448688bde2fe7f5b6f4e608faadde32c583a986d90b",
status_of-clientAppn: [STDOUT]                         "lastState": {},
status_of-clientAppn: [STDOUT]                         "name": "main",
status_of-clientAppn: [STDOUT]                         "ready": true,
status_of-clientAppn: [STDOUT]                         "restartCount": 0,
status_of-clientAppn: [STDOUT]                         "started": true,
status_of-clientAppn: [STDOUT]                         "state": {
status_of-clientAppn: [STDOUT]                             "running": {
status_of-clientAppn: [STDOUT]                                 "startedAt": "2021-06-11T08:23:09Z"
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         }
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "hostIP": "10.50.103.165",
status_of-clientAppn: [STDOUT]                 "phase": "Running",
status_of-clientAppn: [STDOUT]                 "podIP": "10.50.114.244",
status_of-clientAppn: [STDOUT]                 "podIPs": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "ip": "10.50.114.244"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "qosClass": "BestEffort",
status_of-clientAppn: [STDOUT]                 "startTime": "2021-06-11T08:23:05Z"
status_of-clientAppn: [STDOUT]             }
status_of-clientAppn: [STDOUT]         },
status_of-clientAppn: [STDOUT]         {
status_of-clientAppn: [STDOUT]             "apiVersion": "v1",
status_of-clientAppn: [STDOUT]             "kind": "Pod",
status_of-clientAppn: [STDOUT]             "metadata": {
status_of-clientAppn: [STDOUT]                 "annotations": {
status_of-clientAppn: [STDOUT]                     "kubernetes.io/psp": "eks.privileged"
status_of-clientAppn: [STDOUT]                 },
status_of-clientAppn: [STDOUT]                 "creationTimestamp": "2021-06-11T08:23:05Z",
status_of-clientAppn: [STDOUT]                 "generateName": "tcp-client-vs-1-68cdc89586-",
status_of-clientAppn: [STDOUT]                 "labels": {
status_of-clientAppn: [STDOUT]                     "app": "http",
status_of-clientAppn: [STDOUT]                     "app.cloud.tibco.com/owner": "local",
status_of-clientAppn: [STDOUT]                     "app.cloud.tibco.com/tunnel": "enabled",
status_of-clientAppn: [STDOUT]                     "app.kubernetes.io/name": "tcp-client",
status_of-clientAppn: [STDOUT]                     "pod-template-hash": "68cdc89586"
status_of-clientAppn: [STDOUT]                 },
status_of-clientAppn: [STDOUT]                 "managedFields": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "apiVersion": "v1",
status_of-clientAppn: [STDOUT]                         "fieldsType": "FieldsV1",
status_of-clientAppn: [STDOUT]                         "fieldsV1": {
status_of-clientAppn: [STDOUT]                             "f:metadata": {
status_of-clientAppn: [STDOUT]                                 "f:generateName": {},
status_of-clientAppn: [STDOUT]                                 "f:labels": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "f:app": {},
status_of-clientAppn: [STDOUT]                                     "f:app.cloud.tibco.com/owner": {},
status_of-clientAppn: [STDOUT]                                     "f:app.cloud.tibco.com/tunnel": {},
status_of-clientAppn: [STDOUT]                                     "f:app.kubernetes.io/name": {},
status_of-clientAppn: [STDOUT]                                     "f:pod-template-hash": {}
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:ownerReferences": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "k:{\"uid\":\"72a9a586-5bdf-4271-ab6e-638b9def7049\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:apiVersion": {},
status_of-clientAppn: [STDOUT]                                         "f:blockOwnerDeletion": {},
status_of-clientAppn: [STDOUT]                                         "f:controller": {},
status_of-clientAppn: [STDOUT]                                         "f:kind": {},
status_of-clientAppn: [STDOUT]                                         "f:name": {},
status_of-clientAppn: [STDOUT]                                         "f:uid": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 }
status_of-clientAppn: [STDOUT]                             },
status_of-clientAppn: [STDOUT]                             "f:spec": {
status_of-clientAppn: [STDOUT]                                 "f:containers": {
status_of-clientAppn: [STDOUT]                                     "k:{\"name\":\"container-agent\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:image": {},
status_of-clientAppn: [STDOUT]                                         "f:imagePullPolicy": {},
status_of-clientAppn: [STDOUT]                                         "f:name": {},
status_of-clientAppn: [STDOUT]                                         "f:resources": {},
status_of-clientAppn: [STDOUT]                                         "f:securityContext": {
status_of-clientAppn: [STDOUT]                                             ".": {},
status_of-clientAppn: [STDOUT]                                             "f:capabilities": {
status_of-clientAppn: [STDOUT]                                                 ".": {},
status_of-clientAppn: [STDOUT]                                                 "f:add": {}
status_of-clientAppn: [STDOUT]                                             }
status_of-clientAppn: [STDOUT]                                         },
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePath": {},
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePolicy": {}
status_of-clientAppn: [STDOUT]                                     },
status_of-clientAppn: [STDOUT]                                     "k:{\"name\":\"main\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:image": {},
status_of-clientAppn: [STDOUT]                                         "f:imagePullPolicy": {},
status_of-clientAppn: [STDOUT]                                         "f:name": {},
status_of-clientAppn: [STDOUT]                                         "f:resources": {},
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePath": {},
status_of-clientAppn: [STDOUT]                                         "f:terminationMessagePolicy": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:dnsPolicy": {},
status_of-clientAppn: [STDOUT]                                 "f:enableServiceLinks": {},
status_of-clientAppn: [STDOUT]                                 "f:nodeSelector": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "f:kubernetes.io/os": {}
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:restartPolicy": {},
status_of-clientAppn: [STDOUT]                                 "f:schedulerName": {},
status_of-clientAppn: [STDOUT]                                 "f:securityContext": {},
status_of-clientAppn: [STDOUT]                                 "f:terminationGracePeriodSeconds": {}
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         },
status_of-clientAppn: [STDOUT]                         "manager": "kube-controller-manager",
status_of-clientAppn: [STDOUT]                         "operation": "Update",
status_of-clientAppn: [STDOUT]                         "time": "2021-06-11T08:23:05Z"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "apiVersion": "v1",
status_of-clientAppn: [STDOUT]                         "fieldsType": "FieldsV1",
status_of-clientAppn: [STDOUT]                         "fieldsV1": {
status_of-clientAppn: [STDOUT]                             "f:status": {
status_of-clientAppn: [STDOUT]                                 "f:conditions": {
status_of-clientAppn: [STDOUT]                                     "k:{\"type\":\"ContainersReady\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:lastProbeTime": {},
status_of-clientAppn: [STDOUT]                                         "f:lastTransitionTime": {},
status_of-clientAppn: [STDOUT]                                         "f:status": {},
status_of-clientAppn: [STDOUT]                                         "f:type": {}
status_of-clientAppn: [STDOUT]                                     },
status_of-clientAppn: [STDOUT]                                     "k:{\"type\":\"Initialized\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:lastProbeTime": {},
status_of-clientAppn: [STDOUT]                                         "f:lastTransitionTime": {},
status_of-clientAppn: [STDOUT]                                         "f:status": {},
status_of-clientAppn: [STDOUT]                                         "f:type": {}
status_of-clientAppn: [STDOUT]                                     },
status_of-clientAppn: [STDOUT]                                     "k:{\"type\":\"Ready\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:lastProbeTime": {},
status_of-clientAppn: [STDOUT]                                         "f:lastTransitionTime": {},
status_of-clientAppn: [STDOUT]                                         "f:status": {},
status_of-clientAppn: [STDOUT]                                         "f:type": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:containerStatuses": {},
status_of-clientAppn: [STDOUT]                                 "f:hostIP": {},
status_of-clientAppn: [STDOUT]                                 "f:phase": {},
status_of-clientAppn: [STDOUT]                                 "f:podIP": {},
status_of-clientAppn: [STDOUT]                                 "f:podIPs": {
status_of-clientAppn: [STDOUT]                                     ".": {},
status_of-clientAppn: [STDOUT]                                     "k:{\"ip\":\"10.50.89.76\"}": {
status_of-clientAppn: [STDOUT]                                         ".": {},
status_of-clientAppn: [STDOUT]                                         "f:ip": {}
status_of-clientAppn: [STDOUT]                                     }
status_of-clientAppn: [STDOUT]                                 },
status_of-clientAppn: [STDOUT]                                 "f:startTime": {}
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         },
status_of-clientAppn: [STDOUT]                         "manager": "kubelet",
status_of-clientAppn: [STDOUT]                         "operation": "Update",
status_of-clientAppn: [STDOUT]                         "time": "2021-06-11T08:23:09Z"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "name": "tcp-client-vs-1-68cdc89586-hq7h8",
status_of-clientAppn: [STDOUT]                 "namespace": "aws-compute-tibco-tenantx",
status_of-clientAppn: [STDOUT]                 "ownerReferences": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "apiVersion": "apps/v1",
status_of-clientAppn: [STDOUT]                         "blockOwnerDeletion": true,
status_of-clientAppn: [STDOUT]                         "controller": true,
status_of-clientAppn: [STDOUT]                         "kind": "ReplicaSet",
status_of-clientAppn: [STDOUT]                         "name": "tcp-client-vs-1-68cdc89586",
status_of-clientAppn: [STDOUT]                         "uid": "72a9a586-5bdf-4271-ab6e-638b9def7049"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "resourceVersion": "59548",
status_of-clientAppn: [STDOUT]                 "uid": "22dd7112-cb91-4f55-8c5c-6420b082d39a"
status_of-clientAppn: [STDOUT]             },
status_of-clientAppn: [STDOUT]             "spec": {
status_of-clientAppn: [STDOUT]                 "containers": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server:latest",
status_of-clientAppn: [STDOUT]                         "imagePullPolicy": "Always",
status_of-clientAppn: [STDOUT]                         "name": "container-agent",
status_of-clientAppn: [STDOUT]                         "resources": {},
status_of-clientAppn: [STDOUT]                         "securityContext": {
status_of-clientAppn: [STDOUT]                             "capabilities": {
status_of-clientAppn: [STDOUT]                                 "add": [
status_of-clientAppn: [STDOUT]                                     "NET_ADMIN"
status_of-clientAppn: [STDOUT]                                 ]
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         },
status_of-clientAppn: [STDOUT]                         "terminationMessagePath": "/dev/termination-log",
status_of-clientAppn: [STDOUT]                         "terminationMessagePolicy": "File",
status_of-clientAppn: [STDOUT]                         "volumeMounts": [
status_of-clientAppn: [STDOUT]                             {
status_of-clientAppn: [STDOUT]                                 "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
status_of-clientAppn: [STDOUT]                                 "name": "default-token-bjfvs",
status_of-clientAppn: [STDOUT]                                 "readOnly": true
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         ]
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client:latest",
status_of-clientAppn: [STDOUT]                         "imagePullPolicy": "Always",
status_of-clientAppn: [STDOUT]                         "name": "main",
status_of-clientAppn: [STDOUT]                         "resources": {},
status_of-clientAppn: [STDOUT]                         "terminationMessagePath": "/dev/termination-log",
status_of-clientAppn: [STDOUT]                         "terminationMessagePolicy": "File",
status_of-clientAppn: [STDOUT]                         "volumeMounts": [
status_of-clientAppn: [STDOUT]                             {
status_of-clientAppn: [STDOUT]                                 "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
status_of-clientAppn: [STDOUT]                                 "name": "default-token-bjfvs",
status_of-clientAppn: [STDOUT]                                 "readOnly": true
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         ]
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "dnsPolicy": "ClusterFirst",
status_of-clientAppn: [STDOUT]                 "enableServiceLinks": true,
status_of-clientAppn: [STDOUT]                 "nodeName": "ip-10-50-103-165.eu-west-1.compute.internal",
status_of-clientAppn: [STDOUT]                 "nodeSelector": {
status_of-clientAppn: [STDOUT]                     "kubernetes.io/os": "linux"
status_of-clientAppn: [STDOUT]                 },
status_of-clientAppn: [STDOUT]                 "preemptionPolicy": "PreemptLowerPriority",
status_of-clientAppn: [STDOUT]                 "priority": 0,
status_of-clientAppn: [STDOUT]                 "restartPolicy": "Always",
status_of-clientAppn: [STDOUT]                 "schedulerName": "default-scheduler",
status_of-clientAppn: [STDOUT]                 "securityContext": {},
status_of-clientAppn: [STDOUT]                 "serviceAccount": "default",
status_of-clientAppn: [STDOUT]                 "serviceAccountName": "default",
status_of-clientAppn: [STDOUT]                 "terminationGracePeriodSeconds": 30,
status_of-clientAppn: [STDOUT]                 "tolerations": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "effect": "NoExecute",
status_of-clientAppn: [STDOUT]                         "key": "node.kubernetes.io/not-ready",
status_of-clientAppn: [STDOUT]                         "operator": "Exists",
status_of-clientAppn: [STDOUT]                         "tolerationSeconds": 300
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "effect": "NoExecute",
status_of-clientAppn: [STDOUT]                         "key": "node.kubernetes.io/unreachable",
status_of-clientAppn: [STDOUT]                         "operator": "Exists",
status_of-clientAppn: [STDOUT]                         "tolerationSeconds": 300
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "volumes": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "name": "default-token-bjfvs",
status_of-clientAppn: [STDOUT]                         "secret": {
status_of-clientAppn: [STDOUT]                             "defaultMode": 420,
status_of-clientAppn: [STDOUT]                             "secretName": "default-token-bjfvs"
status_of-clientAppn: [STDOUT]                         }
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ]
status_of-clientAppn: [STDOUT]             },
status_of-clientAppn: [STDOUT]             "status": {
status_of-clientAppn: [STDOUT]                 "conditions": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:05Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "Initialized"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:09Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "Ready"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:09Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "ContainersReady"
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "lastProbeTime": null,
status_of-clientAppn: [STDOUT]                         "lastTransitionTime": "2021-06-11T08:23:05Z",
status_of-clientAppn: [STDOUT]                         "status": "True",
status_of-clientAppn: [STDOUT]                         "type": "PodScheduled"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "containerStatuses": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "containerID": "docker://2281a5167d2ddbbfa1e1d21bfd97c12d83b4db6cffb3708c2642640ceec26b73",
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server:latest",
status_of-clientAppn: [STDOUT]                         "imageID": "docker-pullable://664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server@sha256:515fa7b1088a4f321fff43d948ca5b12a27a4e91edc043bc73c99d1f481ce9aa",
status_of-clientAppn: [STDOUT]                         "lastState": {},
status_of-clientAppn: [STDOUT]                         "name": "container-agent",
status_of-clientAppn: [STDOUT]                         "ready": true,
status_of-clientAppn: [STDOUT]                         "restartCount": 0,
status_of-clientAppn: [STDOUT]                         "started": true,
status_of-clientAppn: [STDOUT]                         "state": {
status_of-clientAppn: [STDOUT]                             "running": {
status_of-clientAppn: [STDOUT]                                 "startedAt": "2021-06-11T08:23:08Z"
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         }
status_of-clientAppn: [STDOUT]                     },
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "containerID": "docker://d6d04bb6921b765390a3d3da4015cc2b1805daa766f69521b730f3e3a4baf4e7",
status_of-clientAppn: [STDOUT]                         "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client:latest",
status_of-clientAppn: [STDOUT]                         "imageID": "docker-pullable://664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client@sha256:0338dea216ff033aed52f448688bde2fe7f5b6f4e608faadde32c583a986d90b",
status_of-clientAppn: [STDOUT]                         "lastState": {},
status_of-clientAppn: [STDOUT]                         "name": "main",
status_of-clientAppn: [STDOUT]                         "ready": true,
status_of-clientAppn: [STDOUT]                         "restartCount": 0,
status_of-clientAppn: [STDOUT]                         "started": true,
status_of-clientAppn: [STDOUT]                         "state": {
status_of-clientAppn: [STDOUT]                             "running": {
status_of-clientAppn: [STDOUT]                                 "startedAt": "2021-06-11T08:23:09Z"
status_of-clientAppn: [STDOUT]                             }
status_of-clientAppn: [STDOUT]                         }
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "hostIP": "10.50.103.165",
status_of-clientAppn: [STDOUT]                 "phase": "Running",
status_of-clientAppn: [STDOUT]                 "podIP": "10.50.89.76",
status_of-clientAppn: [STDOUT]                 "podIPs": [
status_of-clientAppn: [STDOUT]                     {
status_of-clientAppn: [STDOUT]                         "ip": "10.50.89.76"
status_of-clientAppn: [STDOUT]                     }
status_of-clientAppn: [STDOUT]                 ],
status_of-clientAppn: [STDOUT]                 "qosClass": "BestEffort",
status_of-clientAppn: [STDOUT]                 "startTime": "2021-06-11T08:23:05Z"
status_of-clientAppn: [STDOUT]             }
status_of-clientAppn: [STDOUT]         }
status_of-clientAppn: [STDOUT]     ],
status_of-clientAppn: [STDOUT]     "kind": "List",
status_of-clientAppn: [STDOUT]     "metadata": {
status_of-clientAppn: [STDOUT]         "resourceVersion": "",
status_of-clientAppn: [STDOUT]         "selfLink": ""
status_of-clientAppn: [STDOUT]     }
status_of-clientAppn: [STDOUT] }
status_of-clientAppn: Captured variable: status_of-clientAppn.running_state=["Running","Running","Running"]
status_of-clientAppn: Captured variable: status_of-clientAppn.capture_pod_name=tcp-client-vs-1-68cdc89586-flxd2
status_of-clientAppn: Captured variable: status_of-clientAppn.status=0
status_of-clientAppn: Validating condition 'status equal 0'
status_of-clientAppn: Expect condition 'status equal 0' passed
status_of-clientAppn: Validating condition 'running_state contains Running'
status_of-clientAppn: Expect condition 'running_state contains Running' passed
status_of-clientAppn: Validating condition 'running_state notContains Pending'
status_of-clientAppn: Expect condition 'running_state notContains Pending' passed
status_of-clientAppn: [OK] Execution results match all expected results
status_of-clientAppn: Completed iteration #0 with status: PASS
status_of-clientAppn: Iteration #0: repeat.until condition 'success' was met. Exiting loop
===== status_of-clientAppn: PASS in 2.562744456s (1 iterations)
checkTunnelStatus: Starting task execution
checkTunnelStatus: Replacing task placeholders (if any)
tibtunnelConnect: Starting task execution
tibtunnelConnect: Replacing task placeholders (if any)
checkTunnelStatus: Start iteration #0
checkTunnelStatus: Executing script: 'kubectl exec tcp-client-vs-1-68cdc89586-flxd2 -naws-compute-tibco-tenantx -c main -- curl -s localhost:7778/v1/tunnel/status'
tibtunnelConnect: Start iteration #0
tibtunnelConnect: Executing script: '/bin/bash -c timeout 60s ./tibtunnel connect -d --remote-debug -s 8081:localhost:8081 https://tenantx-tunnel.compute-dev.eu-west-1.tcie.pro/tcp-client2 -l ./tibtunnelLog'
tibtunnelConnect: [STDERR] time="2021-06-11 13:56:17" level=info msg="Redirecting output to file './tibtunnelLog'"
checkTunnelStatus: [STDOUT] {"isConnected":true,"message":"Tunnel is connected","tunnelInfo":{"8081:localhost:8081":1}}
checkTunnelStatus: Captured variable: checkTunnelStatus.output={"isConnected":true,"message":"Tunnel is connected","tunnelInfo":{"8081:localhost:8081":1}}
checkTunnelStatus: Captured variable: checkTunnelStatus.status=0
checkTunnelStatus: Validating condition 'output containsStr true'
checkTunnelStatus: Expect condition 'output containsStr true' passed
checkTunnelStatus: Validating condition 'output notContainsStr false'
checkTunnelStatus: Expect condition 'output notContainsStr false' passed
checkTunnelStatus: [OK] Execution results match all expected results
checkTunnelStatus: Completed iteration #0 with status: PASS
===== checkTunnelStatus: PASS in 4.417517663s (1 iterations)
sendData: Starting task execution
sendData: Replacing task placeholders (if any)
startOnpremAppn: Starting task execution
startOnpremAppn: Replacing task placeholders (if any)
sendData: Start iteration #0
sendData: Executing script: 'kubectl exec tcp-client-vs-1-68cdc89586-flxd2 -naws-compute-tibco-tenantx -c main -- /test/tcp-client -a localhost:8081'
startOnpremAppn: Start iteration #0
startOnpremAppn: Executing script: '/bin/bash -c timeout 30s ./tcp-server -d -a localhost:8081 >> ./tcpserverLog'
startOnpremAppn: [STDERR] time="2021-06-11T13:56:22+05:30" level=info msg="TCP server started on localhost:8081, idle timeout is 30s"
sendData: [STDERR] time="2021-06-11T08:26:26Z" level=info msg="Current settings:\n    Debug                  : false\n    Connect to             : localhost:8081\n    Concurrency            : 1\n    Connection count       : 1\n    Data size (each conn.) : size=1KB * iterations=1 = 1.0KiB\n    Total data             : 1.0KiB\n    Keepalive              : 0s"
startOnpremAppn: [STDERR] time="2021-06-11T13:56:26+05:30" level=debug msg="[1] got a new connection on localhost:8081"
startOnpremAppn: [STDERR] time="2021-06-11T13:56:26+05:30" level=debug msg="[1] <= received 1.0KiB"
startOnpremAppn: [STDERR] time="2021-06-11T13:56:26+05:30" level=debug msg="[1] => sent 1.0KiB"
sendData: [STDERR] time="2021-06-11T08:26:26Z" level=info msg="Successfully send/received 1.0KiB in 461.792323ms"
startOnpremAppn: [STDERR] time="2021-06-11T13:56:26+05:30" level=debug msg="[1] <= received 0B"
startOnpremAppn: [STDERR] time="2021-06-11T13:56:26+05:30" level=debug msg="[1] Normal close of remote connection: echoed 1.0KiB in 479.171725ms"
sendData: Captured variable: sendData.output=
sendData: Captured variable: sendData.stderr=time="2021-06-11T08:26:26Z" level=info msg="Current settings:\n    Debug                  : false\n    Connect to             : localhost:8081\n    Concurrency            : 1\n    Connection count       : 1\n    Data size (each conn.) : size=1KB * iterations=1 = 1.0KiB\n    Total data             : 1.0KiB\n    Keepalive              : 0s"
time="2021-06-11T08:26:26Z" level=info msg="Successfully send/received 1.0KiB in 461.792323ms"
sendData: Captured variable: sendData.status=0
sendData: Validating condition 'stderr containsStr Successfully send/received 1.0KiB'
sendData: Expect condition 'stderr containsStr Successfully send/received 1.0KiB' passed
sendData: [OK] Execution results match all expected results
sendData: Completed iteration #0 with status: PASS
sendData: Iteration #0: repeat.until condition 'success' was met. Exiting loop
===== sendData: PASS in 4.210429653s (1 iterations)
sleepCommand: Starting task execution
sleepCommand: Replacing task placeholders (if any)
sleepCommand: Start iteration #0
sleepCommand: Executing script: 'sleep 80'
startOnpremAppn: Captured variable: startOnpremAppn.output=
startOnpremAppn: Captured variable: startOnpremAppn.stderr=time="2021-06-11T13:56:22+05:30" level=info msg="TCP server started on localhost:8081, idle timeout is 30s"
time="2021-06-11T13:56:26+05:30" level=debug msg="[1] got a new connection on localhost:8081"
time="2021-06-11T13:56:26+05:30" level=debug msg="[1] <= received 1.0KiB"
time="2021-06-11T13:56:26+05:30" level=debug msg="[1] => sent 1.0KiB"
time="2021-06-11T13:56:26+05:30" level=debug msg="[1] <= received 0B"
time="2021-06-11T13:56:26+05:30" level=debug msg="[1] Normal close of remote connection: echoed 1.0KiB in 479.171725ms"
startOnpremAppn: Captured variable: startOnpremAppn.status=124
startOnpremAppn: Validating condition 'stderr containsStr TCP server started'
startOnpremAppn: Expect condition 'stderr containsStr TCP server started' passed
startOnpremAppn: [OK] Execution results match all expected results
startOnpremAppn: Completed iteration #0 with status: PASS
===== startOnpremAppn: PASS in 30.011368088s (1 iterations)
tibtunnelConnect: Captured variable: tibtunnelConnect.status=124
tibtunnelConnect: [OK] Execution results match all expected results
tibtunnelConnect: Completed iteration #0 with status: PASS
===== tibtunnelConnect: PASS in 61.018886272s (1 iterations)
sleepCommand: Captured variable: sleepCommand.status=0
sleepCommand: [OK] Execution results match all expected results
sleepCommand: Completed iteration #0 with status: PASS
===== sleepCommand: PASS in 80.004255946s (1 iterations)
teardown.delete_yaml_file: Starting task execution
teardown.delete_yaml_file: Replacing task placeholders (if any)
teardown.delete_yaml_file: Start iteration #0
teardown.delete_yaml_file: Executing script: 'kubectl delete -f ./generated/tibcotunnelrouteCR.yaml'
teardown.delete_yaml_file: [STDOUT] tibcotunnelroute.cloud.tibco.com "tcp-client-vs" deleted
teardown.delete_yaml_file: Captured variable: teardown.delete_yaml_file.status=0
teardown.delete_yaml_file: Validating condition 'status equal 0'
teardown.delete_yaml_file: Expect condition 'status equal 0' passed
teardown.delete_yaml_file: [OK] Execution results match all expected results
teardown.delete_yaml_file: Completed iteration #0 with status: PASS
===== teardown.delete_yaml_file: PASS in 27.032856056s (1 iterations)
teardown.delete_yaml_file: Starting task execution
teardown.delete_yaml_file: Replacing task placeholders (if any)
teardown.delete_yaml_file: Start iteration #0
teardown.delete_yaml_file: Executing script: 'kubectl delete -f ./generated/client-app.yaml'
teardown.delete_yaml_file: [STDOUT] deployment.apps "tcp-client-vs-1" deleted
teardown.delete_yaml_file: Captured variable: teardown.delete_yaml_file.status=0
teardown.delete_yaml_file: Validating condition 'status equal 0'
teardown.delete_yaml_file: Expect condition 'status equal 0' passed
teardown.delete_yaml_file: [OK] Execution results match all expected results
teardown.delete_yaml_file: Completed iteration #0 with status: PASS
===== teardown.delete_yaml_file: PASS in 3.279399259s (1 iterations)
teardown.confirm_deletionCR: Starting task execution
teardown.confirm_deletionCR: Replacing task placeholders (if any)
teardown.confirm_deletionCR: Start iteration #0
teardown.confirm_deletionCR: Executing script: 'kubectl get tibcotunnelroute -n aws-compute-tibco-tenantx -o json'
teardown.confirm_deletionCR: [STDOUT] {
teardown.confirm_deletionCR: [STDOUT]     "apiVersion": "v1",
teardown.confirm_deletionCR: [STDOUT]     "items": [],
teardown.confirm_deletionCR: [STDOUT]     "kind": "List",
teardown.confirm_deletionCR: [STDOUT]     "metadata": {
teardown.confirm_deletionCR: [STDOUT]         "resourceVersion": "",
teardown.confirm_deletionCR: [STDOUT]         "selfLink": ""
teardown.confirm_deletionCR: [STDOUT]     }
teardown.confirm_deletionCR: [STDOUT] }
teardown.confirm_deletionCR: Captured variable: teardown.confirm_deletionCR.confirm_deleteCR=[]
teardown.confirm_deletionCR: Captured variable: teardown.confirm_deletionCR.status=0
teardown.confirm_deletionCR: Validating condition 'status equal 0'
teardown.confirm_deletionCR: Expect condition 'status equal 0' passed
teardown.confirm_deletionCR: Validating condition 'confirm_deleteCR notContainsStr tcp-client-vs'
teardown.confirm_deletionCR: Expect condition 'confirm_deleteCR notContainsStr tcp-client-vs' passed
teardown.confirm_deletionCR: [OK] Execution results match all expected results
teardown.confirm_deletionCR: Completed iteration #0 with status: PASS
===== teardown.confirm_deletionCR: PASS in 3.657649955s (1 iterations)
teardown.confirm_deletionA: Starting task execution
teardown.confirm_deletionA: Replacing task placeholders (if any)
teardown.confirm_deletionA: Start iteration #0
teardown.confirm_deletionA: Executing script: 'kubectl get deploy -n aws-compute-tibco-tenantx -o json'
teardown.confirm_deletionA: [STDOUT] {
teardown.confirm_deletionA: [STDOUT]     "apiVersion": "v1",
teardown.confirm_deletionA: [STDOUT]     "items": [
teardown.confirm_deletionA: [STDOUT]         {
teardown.confirm_deletionA: [STDOUT]             "apiVersion": "apps/v1",
teardown.confirm_deletionA: [STDOUT]             "kind": "Deployment",
teardown.confirm_deletionA: [STDOUT]             "metadata": {
teardown.confirm_deletionA: [STDOUT]                 "annotations": {
teardown.confirm_deletionA: [STDOUT]                     "deployment.kubernetes.io/revision": "1",
teardown.confirm_deletionA: [STDOUT]                     "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"cloud.tibco.com/v1\",\"kind\":\"TibcoDeployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app.cloud.tibco.com/owner\":\"qa_tibco.com\",\"app.kubernetes.io/component\":\"test-infrastructure\",\"app.kubernetes.io/name\":\"intercom-client\",\"app.kubernetes.io/part-of\":\"qa-testing\"},\"name\":\"intercom-client\",\"namespace\":\"aws-compute-tibco-tenantx\"},\"spec\":{\"deployment\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/name\":\"intercom-client\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app.cloud.tibco.com/owner\":\"qa_tibco.com\",\"app.kubernetes.io/component\":\"test-infrastructure\",\"app.kubernetes.io/name\":\"intercom-client\",\"app.kubernetes.io/part-of\":\"qa-testing\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"DELAY_START\",\"value\":\"0s\"},{\"name\":\"DELAY_STOP\",\"value\":\"0s\"},{\"name\":\"REQUEST_READ_TIMEOUT\",\"value\":\"0s\"},{\"name\":\"RESPONSE_WRITE_TIMEOUT\",\"value\":\"0s\"},{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"NODE_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"POD_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.podIP\"}}}],\"image\":\"664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/test-service:latest\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":1,\"httpGet\":{\"path\":\"/echo/health\",\"port\":8080},\"initialDelaySeconds\":1,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":3},\"name\":\"main\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":1,\"httpGet\":{\"path\":\"/echo/health\",\"port\":8080},\"initialDelaySeconds\":1,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":3},\"resources\":{}}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"},\"terminationGracePeriodSeconds\":10}}}}}\n"
teardown.confirm_deletionA: [STDOUT]                 },
teardown.confirm_deletionA: [STDOUT]                 "creationTimestamp": "2021-06-11T07:02:58Z",
teardown.confirm_deletionA: [STDOUT]                 "generation": 1,
teardown.confirm_deletionA: [STDOUT]                 "labels": {
teardown.confirm_deletionA: [STDOUT]                     "app.cloud.tibco.com/owner": "qa_tibco.com",
teardown.confirm_deletionA: [STDOUT]                     "app.kubernetes.io/component": "test-infrastructure",
teardown.confirm_deletionA: [STDOUT]                     "app.kubernetes.io/managed-by": "tibco-deployment-operator",
teardown.confirm_deletionA: [STDOUT]                     "app.kubernetes.io/name": "intercom-client",
teardown.confirm_deletionA: [STDOUT]                     "app.kubernetes.io/part-of": "qa-testing"
teardown.confirm_deletionA: [STDOUT]                 },
teardown.confirm_deletionA: [STDOUT]                 "managedFields": [
teardown.confirm_deletionA: [STDOUT]                     {
teardown.confirm_deletionA: [STDOUT]                         "apiVersion": "apps/v1",
teardown.confirm_deletionA: [STDOUT]                         "fieldsType": "FieldsV1",
teardown.confirm_deletionA: [STDOUT]                         "fieldsV1": {
teardown.confirm_deletionA: [STDOUT]                             "f:metadata": {
teardown.confirm_deletionA: [STDOUT]                                 "f:annotations": {
teardown.confirm_deletionA: [STDOUT]                                     ".": {},
teardown.confirm_deletionA: [STDOUT]                                     "f:kubectl.kubernetes.io/last-applied-configuration": {}
teardown.confirm_deletionA: [STDOUT]                                 },
teardown.confirm_deletionA: [STDOUT]                                 "f:labels": {
teardown.confirm_deletionA: [STDOUT]                                     ".": {},
teardown.confirm_deletionA: [STDOUT]                                     "f:app.cloud.tibco.com/owner": {},
teardown.confirm_deletionA: [STDOUT]                                     "f:app.kubernetes.io/component": {},
teardown.confirm_deletionA: [STDOUT]                                     "f:app.kubernetes.io/managed-by": {},
teardown.confirm_deletionA: [STDOUT]                                     "f:app.kubernetes.io/name": {},
teardown.confirm_deletionA: [STDOUT]                                     "f:app.kubernetes.io/part-of": {}
teardown.confirm_deletionA: [STDOUT]                                 },
teardown.confirm_deletionA: [STDOUT]                                 "f:ownerReferences": {
teardown.confirm_deletionA: [STDOUT]                                     ".": {},
teardown.confirm_deletionA: [STDOUT]                                     "k:{\"uid\":\"0710ba18-a096-4d3c-a83a-bc2e1dada80a\"}": {
teardown.confirm_deletionA: [STDOUT]                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:apiVersion": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:blockOwnerDeletion": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:controller": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:kind": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:name": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:uid": {}
teardown.confirm_deletionA: [STDOUT]                                     }
teardown.confirm_deletionA: [STDOUT]                                 }
teardown.confirm_deletionA: [STDOUT]                             },
teardown.confirm_deletionA: [STDOUT]                             "f:spec": {
teardown.confirm_deletionA: [STDOUT]                                 "f:progressDeadlineSeconds": {},
teardown.confirm_deletionA: [STDOUT]                                 "f:replicas": {},
teardown.confirm_deletionA: [STDOUT]                                 "f:revisionHistoryLimit": {},
teardown.confirm_deletionA: [STDOUT]                                 "f:selector": {},
teardown.confirm_deletionA: [STDOUT]                                 "f:strategy": {
teardown.confirm_deletionA: [STDOUT]                                     "f:rollingUpdate": {
teardown.confirm_deletionA: [STDOUT]                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:maxSurge": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:maxUnavailable": {}
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     "f:type": {}
teardown.confirm_deletionA: [STDOUT]                                 },
teardown.confirm_deletionA: [STDOUT]                                 "f:template": {
teardown.confirm_deletionA: [STDOUT]                                     "f:metadata": {
teardown.confirm_deletionA: [STDOUT]                                         "f:labels": {
teardown.confirm_deletionA: [STDOUT]                                             ".": {},
teardown.confirm_deletionA: [STDOUT]                                             "f:app.cloud.tibco.com/owner": {},
teardown.confirm_deletionA: [STDOUT]                                             "f:app.kubernetes.io/component": {},
teardown.confirm_deletionA: [STDOUT]                                             "f:app.kubernetes.io/name": {},
teardown.confirm_deletionA: [STDOUT]                                             "f:app.kubernetes.io/part-of": {}
teardown.confirm_deletionA: [STDOUT]                                         }
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     "f:spec": {
teardown.confirm_deletionA: [STDOUT]                                         "f:containers": {
teardown.confirm_deletionA: [STDOUT]                                             "k:{\"name\":\"main\"}": {
teardown.confirm_deletionA: [STDOUT]                                                 ".": {},
teardown.confirm_deletionA: [STDOUT]                                                 "f:env": {
teardown.confirm_deletionA: [STDOUT]                                                     ".": {},
teardown.confirm_deletionA: [STDOUT]                                                     "k:{\"name\":\"DELAY_START\"}": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:name": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:value": {}
teardown.confirm_deletionA: [STDOUT]                                                     },
teardown.confirm_deletionA: [STDOUT]                                                     "k:{\"name\":\"DELAY_STOP\"}": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:name": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:value": {}
teardown.confirm_deletionA: [STDOUT]                                                     },
teardown.confirm_deletionA: [STDOUT]                                                     "k:{\"name\":\"NODE_IP\"}": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:name": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:valueFrom": {
teardown.confirm_deletionA: [STDOUT]                                                             ".": {},
teardown.confirm_deletionA: [STDOUT]                                                             "f:fieldRef": {
teardown.confirm_deletionA: [STDOUT]                                                                 ".": {},
teardown.confirm_deletionA: [STDOUT]                                                                 "f:apiVersion": {},
teardown.confirm_deletionA: [STDOUT]                                                                 "f:fieldPath": {}
teardown.confirm_deletionA: [STDOUT]                                                             }
teardown.confirm_deletionA: [STDOUT]                                                         }
teardown.confirm_deletionA: [STDOUT]                                                     },
teardown.confirm_deletionA: [STDOUT]                                                     "k:{\"name\":\"NODE_NAME\"}": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:name": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:valueFrom": {
teardown.confirm_deletionA: [STDOUT]                                                             ".": {},
teardown.confirm_deletionA: [STDOUT]                                                             "f:fieldRef": {
teardown.confirm_deletionA: [STDOUT]                                                                 ".": {},
teardown.confirm_deletionA: [STDOUT]                                                                 "f:apiVersion": {},
teardown.confirm_deletionA: [STDOUT]                                                                 "f:fieldPath": {}
teardown.confirm_deletionA: [STDOUT]                                                             }
teardown.confirm_deletionA: [STDOUT]                                                         }
teardown.confirm_deletionA: [STDOUT]                                                     },
teardown.confirm_deletionA: [STDOUT]                                                     "k:{\"name\":\"POD_IP\"}": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:name": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:valueFrom": {
teardown.confirm_deletionA: [STDOUT]                                                             ".": {},
teardown.confirm_deletionA: [STDOUT]                                                             "f:fieldRef": {
teardown.confirm_deletionA: [STDOUT]                                                                 ".": {},
teardown.confirm_deletionA: [STDOUT]                                                                 "f:apiVersion": {},
teardown.confirm_deletionA: [STDOUT]                                                                 "f:fieldPath": {}
teardown.confirm_deletionA: [STDOUT]                                                             }
teardown.confirm_deletionA: [STDOUT]                                                         }
teardown.confirm_deletionA: [STDOUT]                                                     },
teardown.confirm_deletionA: [STDOUT]                                                     "k:{\"name\":\"REQUEST_READ_TIMEOUT\"}": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:name": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:value": {}
teardown.confirm_deletionA: [STDOUT]                                                     },
teardown.confirm_deletionA: [STDOUT]                                                     "k:{\"name\":\"RESPONSE_WRITE_TIMEOUT\"}": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:name": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:value": {}
teardown.confirm_deletionA: [STDOUT]                                                     }
teardown.confirm_deletionA: [STDOUT]                                                 },
teardown.confirm_deletionA: [STDOUT]                                                 "f:image": {},
teardown.confirm_deletionA: [STDOUT]                                                 "f:imagePullPolicy": {},
teardown.confirm_deletionA: [STDOUT]                                                 "f:livenessProbe": {
teardown.confirm_deletionA: [STDOUT]                                                     ".": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:failureThreshold": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:httpGet": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:path": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:port": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:scheme": {}
teardown.confirm_deletionA: [STDOUT]                                                     },
teardown.confirm_deletionA: [STDOUT]                                                     "f:initialDelaySeconds": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:periodSeconds": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:successThreshold": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:timeoutSeconds": {}
teardown.confirm_deletionA: [STDOUT]                                                 },
teardown.confirm_deletionA: [STDOUT]                                                 "f:name": {},
teardown.confirm_deletionA: [STDOUT]                                                 "f:ports": {
teardown.confirm_deletionA: [STDOUT]                                                     ".": {},
teardown.confirm_deletionA: [STDOUT]                                                     "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:containerPort": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:protocol": {}
teardown.confirm_deletionA: [STDOUT]                                                     }
teardown.confirm_deletionA: [STDOUT]                                                 },
teardown.confirm_deletionA: [STDOUT]                                                 "f:readinessProbe": {
teardown.confirm_deletionA: [STDOUT]                                                     ".": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:failureThreshold": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:httpGet": {
teardown.confirm_deletionA: [STDOUT]                                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:path": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:port": {},
teardown.confirm_deletionA: [STDOUT]                                                         "f:scheme": {}
teardown.confirm_deletionA: [STDOUT]                                                     },
teardown.confirm_deletionA: [STDOUT]                                                     "f:initialDelaySeconds": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:periodSeconds": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:successThreshold": {},
teardown.confirm_deletionA: [STDOUT]                                                     "f:timeoutSeconds": {}
teardown.confirm_deletionA: [STDOUT]                                                 },
teardown.confirm_deletionA: [STDOUT]                                                 "f:resources": {},
teardown.confirm_deletionA: [STDOUT]                                                 "f:terminationMessagePath": {},
teardown.confirm_deletionA: [STDOUT]                                                 "f:terminationMessagePolicy": {}
teardown.confirm_deletionA: [STDOUT]                                             }
teardown.confirm_deletionA: [STDOUT]                                         },
teardown.confirm_deletionA: [STDOUT]                                         "f:dnsPolicy": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:nodeSelector": {
teardown.confirm_deletionA: [STDOUT]                                             ".": {},
teardown.confirm_deletionA: [STDOUT]                                             "f:kubernetes.io/os": {}
teardown.confirm_deletionA: [STDOUT]                                         },
teardown.confirm_deletionA: [STDOUT]                                         "f:restartPolicy": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:schedulerName": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:securityContext": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:terminationGracePeriodSeconds": {}
teardown.confirm_deletionA: [STDOUT]                                     }
teardown.confirm_deletionA: [STDOUT]                                 }
teardown.confirm_deletionA: [STDOUT]                             }
teardown.confirm_deletionA: [STDOUT]                         },
teardown.confirm_deletionA: [STDOUT]                         "manager": "deployment-operator",
teardown.confirm_deletionA: [STDOUT]                         "operation": "Update",
teardown.confirm_deletionA: [STDOUT]                         "time": "2021-06-11T07:02:58Z"
teardown.confirm_deletionA: [STDOUT]                     },
teardown.confirm_deletionA: [STDOUT]                     {
teardown.confirm_deletionA: [STDOUT]                         "apiVersion": "apps/v1",
teardown.confirm_deletionA: [STDOUT]                         "fieldsType": "FieldsV1",
teardown.confirm_deletionA: [STDOUT]                         "fieldsV1": {
teardown.confirm_deletionA: [STDOUT]                             "f:metadata": {
teardown.confirm_deletionA: [STDOUT]                                 "f:annotations": {
teardown.confirm_deletionA: [STDOUT]                                     "f:deployment.kubernetes.io/revision": {}
teardown.confirm_deletionA: [STDOUT]                                 }
teardown.confirm_deletionA: [STDOUT]                             },
teardown.confirm_deletionA: [STDOUT]                             "f:status": {
teardown.confirm_deletionA: [STDOUT]                                 "f:availableReplicas": {},
teardown.confirm_deletionA: [STDOUT]                                 "f:conditions": {
teardown.confirm_deletionA: [STDOUT]                                     ".": {},
teardown.confirm_deletionA: [STDOUT]                                     "k:{\"type\":\"Available\"}": {
teardown.confirm_deletionA: [STDOUT]                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:lastTransitionTime": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:lastUpdateTime": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:message": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:reason": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:status": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:type": {}
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     "k:{\"type\":\"Progressing\"}": {
teardown.confirm_deletionA: [STDOUT]                                         ".": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:lastTransitionTime": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:lastUpdateTime": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:message": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:reason": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:status": {},
teardown.confirm_deletionA: [STDOUT]                                         "f:type": {}
teardown.confirm_deletionA: [STDOUT]                                     }
teardown.confirm_deletionA: [STDOUT]                                 },
teardown.confirm_deletionA: [STDOUT]                                 "f:observedGeneration": {},
teardown.confirm_deletionA: [STDOUT]                                 "f:readyReplicas": {},
teardown.confirm_deletionA: [STDOUT]                                 "f:replicas": {},
teardown.confirm_deletionA: [STDOUT]                                 "f:updatedReplicas": {}
teardown.confirm_deletionA: [STDOUT]                             }
teardown.confirm_deletionA: [STDOUT]                         },
teardown.confirm_deletionA: [STDOUT]                         "manager": "kube-controller-manager",
teardown.confirm_deletionA: [STDOUT]                         "operation": "Update",
teardown.confirm_deletionA: [STDOUT]                         "time": "2021-06-11T07:03:09Z"
teardown.confirm_deletionA: [STDOUT]                     }
teardown.confirm_deletionA: [STDOUT]                 ],
teardown.confirm_deletionA: [STDOUT]                 "name": "intercom-client",
teardown.confirm_deletionA: [STDOUT]                 "namespace": "aws-compute-tibco-tenantx",
teardown.confirm_deletionA: [STDOUT]                 "ownerReferences": [
teardown.confirm_deletionA: [STDOUT]                     {
teardown.confirm_deletionA: [STDOUT]                         "apiVersion": "cloud.tibco.com/v1",
teardown.confirm_deletionA: [STDOUT]                         "blockOwnerDeletion": true,
teardown.confirm_deletionA: [STDOUT]                         "controller": true,
teardown.confirm_deletionA: [STDOUT]                         "kind": "TibcoDeployment",
teardown.confirm_deletionA: [STDOUT]                         "name": "intercom-client",
teardown.confirm_deletionA: [STDOUT]                         "uid": "0710ba18-a096-4d3c-a83a-bc2e1dada80a"
teardown.confirm_deletionA: [STDOUT]                     }
teardown.confirm_deletionA: [STDOUT]                 ],
teardown.confirm_deletionA: [STDOUT]                 "resourceVersion": "27827",
teardown.confirm_deletionA: [STDOUT]                 "uid": "9748301f-6725-4275-8868-ed0ea5692e9b"
teardown.confirm_deletionA: [STDOUT]             },
teardown.confirm_deletionA: [STDOUT]             "spec": {
teardown.confirm_deletionA: [STDOUT]                 "progressDeadlineSeconds": 600,
teardown.confirm_deletionA: [STDOUT]                 "replicas": 1,
teardown.confirm_deletionA: [STDOUT]                 "revisionHistoryLimit": 10,
teardown.confirm_deletionA: [STDOUT]                 "selector": {
teardown.confirm_deletionA: [STDOUT]                     "matchLabels": {
teardown.confirm_deletionA: [STDOUT]                         "app.kubernetes.io/name": "intercom-client"
teardown.confirm_deletionA: [STDOUT]                     }
teardown.confirm_deletionA: [STDOUT]                 },
teardown.confirm_deletionA: [STDOUT]                 "strategy": {
teardown.confirm_deletionA: [STDOUT]                     "rollingUpdate": {
teardown.confirm_deletionA: [STDOUT]                         "maxSurge": 1,
teardown.confirm_deletionA: [STDOUT]                         "maxUnavailable": "25%!"(MISSING)
teardown.confirm_deletionA: [STDOUT]                     },
teardown.confirm_deletionA: [STDOUT]                     "type": "RollingUpdate"
teardown.confirm_deletionA: [STDOUT]                 },
teardown.confirm_deletionA: [STDOUT]                 "template": {
teardown.confirm_deletionA: [STDOUT]                     "metadata": {
teardown.confirm_deletionA: [STDOUT]                         "creationTimestamp": null,
teardown.confirm_deletionA: [STDOUT]                         "labels": {
teardown.confirm_deletionA: [STDOUT]                             "app.cloud.tibco.com/owner": "qa_tibco.com",
teardown.confirm_deletionA: [STDOUT]                             "app.kubernetes.io/component": "test-infrastructure",
teardown.confirm_deletionA: [STDOUT]                             "app.kubernetes.io/name": "intercom-client",
teardown.confirm_deletionA: [STDOUT]                             "app.kubernetes.io/part-of": "qa-testing"
teardown.confirm_deletionA: [STDOUT]                         }
teardown.confirm_deletionA: [STDOUT]                     },
teardown.confirm_deletionA: [STDOUT]                     "spec": {
teardown.confirm_deletionA: [STDOUT]                         "containers": [
teardown.confirm_deletionA: [STDOUT]                             {
teardown.confirm_deletionA: [STDOUT]                                 "env": [
teardown.confirm_deletionA: [STDOUT]                                     {
teardown.confirm_deletionA: [STDOUT]                                         "name": "DELAY_START",
teardown.confirm_deletionA: [STDOUT]                                         "value": "0s"
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     {
teardown.confirm_deletionA: [STDOUT]                                         "name": "DELAY_STOP",
teardown.confirm_deletionA: [STDOUT]                                         "value": "0s"
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     {
teardown.confirm_deletionA: [STDOUT]                                         "name": "REQUEST_READ_TIMEOUT",
teardown.confirm_deletionA: [STDOUT]                                         "value": "0s"
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     {
teardown.confirm_deletionA: [STDOUT]                                         "name": "RESPONSE_WRITE_TIMEOUT",
teardown.confirm_deletionA: [STDOUT]                                         "value": "0s"
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     {
teardown.confirm_deletionA: [STDOUT]                                         "name": "NODE_NAME",
teardown.confirm_deletionA: [STDOUT]                                         "valueFrom": {
teardown.confirm_deletionA: [STDOUT]                                             "fieldRef": {
teardown.confirm_deletionA: [STDOUT]                                                 "apiVersion": "v1",
teardown.confirm_deletionA: [STDOUT]                                                 "fieldPath": "spec.nodeName"
teardown.confirm_deletionA: [STDOUT]                                             }
teardown.confirm_deletionA: [STDOUT]                                         }
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     {
teardown.confirm_deletionA: [STDOUT]                                         "name": "NODE_IP",
teardown.confirm_deletionA: [STDOUT]                                         "valueFrom": {
teardown.confirm_deletionA: [STDOUT]                                             "fieldRef": {
teardown.confirm_deletionA: [STDOUT]                                                 "apiVersion": "v1",
teardown.confirm_deletionA: [STDOUT]                                                 "fieldPath": "status.hostIP"
teardown.confirm_deletionA: [STDOUT]                                             }
teardown.confirm_deletionA: [STDOUT]                                         }
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     {
teardown.confirm_deletionA: [STDOUT]                                         "name": "POD_IP",
teardown.confirm_deletionA: [STDOUT]                                         "valueFrom": {
teardown.confirm_deletionA: [STDOUT]                                             "fieldRef": {
teardown.confirm_deletionA: [STDOUT]                                                 "apiVersion": "v1",
teardown.confirm_deletionA: [STDOUT]                                                 "fieldPath": "status.podIP"
teardown.confirm_deletionA: [STDOUT]                                             }
teardown.confirm_deletionA: [STDOUT]                                         }
teardown.confirm_deletionA: [STDOUT]                                     }
teardown.confirm_deletionA: [STDOUT]                                 ],
teardown.confirm_deletionA: [STDOUT]                                 "image": "664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/test-service:latest",
teardown.confirm_deletionA: [STDOUT]                                 "imagePullPolicy": "Always",
teardown.confirm_deletionA: [STDOUT]                                 "livenessProbe": {
teardown.confirm_deletionA: [STDOUT]                                     "failureThreshold": 1,
teardown.confirm_deletionA: [STDOUT]                                     "httpGet": {
teardown.confirm_deletionA: [STDOUT]                                         "path": "/echo/health",
teardown.confirm_deletionA: [STDOUT]                                         "port": 8080,
teardown.confirm_deletionA: [STDOUT]                                         "scheme": "HTTP"
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     "initialDelaySeconds": 1,
teardown.confirm_deletionA: [STDOUT]                                     "periodSeconds": 5,
teardown.confirm_deletionA: [STDOUT]                                     "successThreshold": 1,
teardown.confirm_deletionA: [STDOUT]                                     "timeoutSeconds": 3
teardown.confirm_deletionA: [STDOUT]                                 },
teardown.confirm_deletionA: [STDOUT]                                 "name": "main",
teardown.confirm_deletionA: [STDOUT]                                 "ports": [
teardown.confirm_deletionA: [STDOUT]                                     {
teardown.confirm_deletionA: [STDOUT]                                         "containerPort": 8080,
teardown.confirm_deletionA: [STDOUT]                                         "protocol": "TCP"
teardown.confirm_deletionA: [STDOUT]                                     }
teardown.confirm_deletionA: [STDOUT]                                 ],
teardown.confirm_deletionA: [STDOUT]                                 "readinessProbe": {
teardown.confirm_deletionA: [STDOUT]                                     "failureThreshold": 1,
teardown.confirm_deletionA: [STDOUT]                                     "httpGet": {
teardown.confirm_deletionA: [STDOUT]                                         "path": "/echo/health",
teardown.confirm_deletionA: [STDOUT]                                         "port": 8080,
teardown.confirm_deletionA: [STDOUT]                                         "scheme": "HTTP"
teardown.confirm_deletionA: [STDOUT]                                     },
teardown.confirm_deletionA: [STDOUT]                                     "initialDelaySeconds": 1,
teardown.confirm_deletionA: [STDOUT]                                     "periodSeconds": 5,
teardown.confirm_deletionA: [STDOUT]                                     "successThreshold": 1,
teardown.confirm_deletionA: [STDOUT]                                     "timeoutSeconds": 3
teardown.confirm_deletionA: [STDOUT]                                 },
teardown.confirm_deletionA: [STDOUT]                                 "resources": {},
teardown.confirm_deletionA: [STDOUT]                                 "terminationMessagePath": "/dev/termination-log",
teardown.confirm_deletionA: [STDOUT]                                 "terminationMessagePolicy": "File"
teardown.confirm_deletionA: [STDOUT]                             }
teardown.confirm_deletionA: [STDOUT]                         ],
teardown.confirm_deletionA: [STDOUT]                         "dnsPolicy": "ClusterFirst",
teardown.confirm_deletionA: [STDOUT]                         "nodeSelector": {
teardown.confirm_deletionA: [STDOUT]                             "kubernetes.io/os": "linux"
teardown.confirm_deletionA: [STDOUT]                         },
teardown.confirm_deletionA: [STDOUT]                         "restartPolicy": "Always",
teardown.confirm_deletionA: [STDOUT]                         "schedulerName": "default-scheduler",
teardown.confirm_deletionA: [STDOUT]                         "securityContext": {},
teardown.confirm_deletionA: [STDOUT]                         "terminationGracePeriodSeconds": 10
teardown.confirm_deletionA: [STDOUT]                     }
teardown.confirm_deletionA: [STDOUT]                 }
teardown.confirm_deletionA: [STDOUT]             },
teardown.confirm_deletionA: [STDOUT]             "status": {
teardown.confirm_deletionA: [STDOUT]                 "availableReplicas": 1,
teardown.confirm_deletionA: [STDOUT]                 "conditions": [
teardown.confirm_deletionA: [STDOUT]                     {
teardown.confirm_deletionA: [STDOUT]                         "lastTransitionTime": "2021-06-11T07:03:09Z",
teardown.confirm_deletionA: [STDOUT]                         "lastUpdateTime": "2021-06-11T07:03:09Z",
teardown.confirm_deletionA: [STDOUT]                         "message": "Deployment has minimum availability.",
teardown.confirm_deletionA: [STDOUT]                         "reason": "MinimumReplicasAvailable",
teardown.confirm_deletionA: [STDOUT]                         "status": "True",
teardown.confirm_deletionA: [STDOUT]                         "type": "Available"
teardown.confirm_deletionA: [STDOUT]                     },
teardown.confirm_deletionA: [STDOUT]                     {
teardown.confirm_deletionA: [STDOUT]                         "lastTransitionTime": "2021-06-11T07:02:58Z",
teardown.confirm_deletionA: [STDOUT]                         "lastUpdateTime": "2021-06-11T07:03:09Z",
teardown.confirm_deletionA: [STDOUT]                         "message": "ReplicaSet \"intercom-client-6fd98bb7fd\" has successfully progressed.",
teardown.confirm_deletionA: [STDOUT]                         "reason": "NewReplicaSetAvailable",
teardown.confirm_deletionA: [STDOUT]                         "status": "True",
teardown.confirm_deletionA: [STDOUT]                         "type": "Progressing"
teardown.confirm_deletionA: [STDOUT]                     }
teardown.confirm_deletionA: [STDOUT]                 ],
teardown.confirm_deletionA: [STDOUT]                 "observedGeneration": 1,
teardown.confirm_deletionA: [STDOUT]                 "readyReplicas": 1,
teardown.confirm_deletionA: [STDOUT]                 "replicas": 1,
teardown.confirm_deletionA: [STDOUT]                 "updatedReplicas": 1
teardown.confirm_deletionA: [STDOUT]             }
teardown.confirm_deletionA: [STDOUT]         }
teardown.confirm_deletionA: [STDOUT]     ],
teardown.confirm_deletionA: [STDOUT]     "kind": "List",
teardown.confirm_deletionA: [STDOUT]     "metadata": {
teardown.confirm_deletionA: [STDOUT]         "resourceVersion": "",
teardown.confirm_deletionA: [STDOUT]         "selfLink": ""
teardown.confirm_deletionA: [STDOUT]     }
teardown.confirm_deletionA: [STDOUT] }
teardown.confirm_deletionA: Captured variable: teardown.confirm_deletionA.confirm_deleteA=intercom-client
teardown.confirm_deletionA: Captured variable: teardown.confirm_deletionA.status=0
teardown.confirm_deletionA: Validating condition 'status equal 0'
teardown.confirm_deletionA: Expect condition 'status equal 0' passed
teardown.confirm_deletionA: Validating condition 'confirm_deleteA notContainsStr tcp-client-vs'
teardown.confirm_deletionA: Expect condition 'confirm_deleteA notContainsStr tcp-client-vs' passed
teardown.confirm_deletionA: [OK] Execution results match all expected results
teardown.confirm_deletionA: Completed iteration #0 with status: PASS
===== teardown.confirm_deletionA: PASS in 2.373172649s (1 iterations)
