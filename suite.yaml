name: suite

setup: 

#download tibtunnel & chmod +x
  - name: downloadTibtunnel
    type: foreground
    exec:
      timeout: 10m
      script:
        cmd: "/bin/bash"
        args: ["-c",  "curl -v -O  ${TIBTUNNEL_LINUX} && chmod +x tibtunnel"]
        #args: ["-c", "timeout 10s ./tibtunnel connect -d --remote-debug -s 8081:localhost:8081 https://tcds-tunnel.tenant-integration.tcie.pro/tcp-client1 -l ./tibtunnelLog" ]
    expect:
      - name: status
        operator: equal
        value: 0

#download tcp-server & chmod +x
  - name: downloadTcpServer
    type: foreground
    exec:
      timeout: 10m
      script:
        cmd: "/bin/bash"
        args: ["-c",  "curl -v -O  ${TCP_SERVER_LINUX} && chmod +x tcp-server"]
        #args: ["-c", "timeout 10s ./tibtunnel connect -d --remote-debug -s 8081:localhost:8081 https://tcds-tunnel.tenant-integration.tcie.pro/tcp-client1 -l ./tibtunnelLog" ]
    expect:
      - name: status
        operator: equal
        value: 0

# Deploy test-service as Intercom-Client
  - name: deployIntercomClient
    type: foreground
    templates: 
      - input: "./resources/services/client-intercom.yaml"
        output: "./generated/client-intercom.yaml"
    exec: 
      timeout: 2m
      script:
        cmd: "kubectl"
        args: ["apply", "-f", "./generated/client-intercom.yaml"]
    expect:
      - name: status
        operator: equal
        value: 0

# To Discover Intercom-client Pod
  - name: getIntercomPod
    type: foreground
    exec:
      timeout: 1m
      script:
        cmd: "kubectl"
        args: ["get", "pods","-l", "app.kubernetes.io/name=intercom-client", "-n", "${NAMESPACE_TENANT}", "-ojson"]
        capture:
          stdout:
            - name: IntPod
              match: "{.items[*].metadata.name}"
              matchType: jsonpath
    expect:
      - name: status
        operator: equal
        value: 0

# AccessKeyHash and AccessSecretkey generation
  - name: AccesssecretKey-AccessHashKey-generation
    type: foreground  
    exec:
      timeout: 1m
      script: 
        cmd: "kubectl"
        args: ["exec", "-n", "${NAMESPACE_TENANT}", "${suite.setup.getIntercomPod.IntPod}", "--", "curl", "-s", "-H", "X-Atmosphere-For-User:qa", "-X", "POST", "http://router.${NAMESPACE_SYSTEM}.svc.cluster.local:90/infra/accesskeys"]
        capture:
          stdout:
            - name: accesskey
              matchType: jsonpath
              match: "{.accessKeySecret}"
            - name: accesshash
              matchType: jsonpath
              match: "{.accessKeyHash}"
    expect:
      - name: status
        operator: equal
        value: 0

# Tibtunnel Configure Profile and Verify Profile
  - name: tibTunnelConfigureDefaultProfile
    type: foreground
    exec:
      timeout: 5s
      script:
        cmd: "/bin/bash"
        args: ["-c", "./tibtunnel configure -a ${suite.setup.AccesssecretKey-AccessHashKey-generation.accesskey}"]
        capture:
          stdout:
            - name: output
              match: "((?s).*)"
    expect:
      - name: output
        operator: containsStr
        value: "Configuration for profile 'default' was successfully saved"

  - name: verifyProfileSaved
    type: foreground
    exec:
      timeout: 15s
      script:
        cmd: "/bin/bash"
        args: ["-c", "cat ~/.tibtunnel/credentials"]
        capture:
          stdout:
            - name: output
              match: "((?s).*)"
    expect:
      - name: output
        operator: containsStr
        value: "${suite.setup.AccesssecretKey-AccessHashKey-generation.accesskey}"
 
teardown:

# Remove test-service Intercom-Client
  - name: delete_intercom_file
    type: foreground
    exec: 
      timeout: 1m
      script:
        cmd: "kubectl"
        args: ["delete", "-f", "./generated/client-intercom.yaml"]
    expect:
      - name: status
        operator: equal
        value: 0

# Verify test-service deletion
  - name: confirm_deletion_intercom
    type: foreground
    exec: 
      timeout: 1m
      script: 
        cmd: "kubectl"
        args: ["get", "deploy", "-n", "${NAMESPACE_TENANT}", "-o", "json"]
        capture:
          stdout: 
            - name: confirm_delete_intercom
              matchType: jsonpath
              match: "{.items[*].metadata.name}"
    expect:
      - name: status
        operator: equal
        value: 0
      - name: confirm_delete_intercom
        operator: notContainsStr
        value: "intercom-client"
    

#remove tcp-server_binary
  - name: rmTcp-server
    type: foreground
    exec:
      timeout: 30s
      script:
        cmd: "/bin/bash"
        args: ["-c", "rm tcp-server"]
        #args: ["-c", "timeout 10s ./tibtunnel connect -d --remote-debug -s 8081:localhost:8081 https://tcds-tunnel.tenant-integration.tcie.pro/tcp-client1 -l ./tibtunnelLog" ]
    expect:
      - name: status
        operator: equal
        value: 0

#remove tibtunnel_binary
  - name: rmTibtunnel
    type: foreground
    exec:
      timeout: 30s
      script:
        cmd: "/bin/bash"
        args: ["-c", "rm tibtunnel"]
        #args: ["-c", "timeout 10s ./tibtunnel connect -d --remote-debug -s 8081:localhost:8081 https://tcds-tunnel.tenant-integration.tcie.pro/tcp-client1 -l ./tibtunnelLog" ]
    expect:
      - name: status
        operator: equal
        value: 0